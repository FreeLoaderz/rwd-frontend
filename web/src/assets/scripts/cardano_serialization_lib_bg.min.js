/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@emurgo/cardano-serialization-lib-asmjs@10.0.4/cardano_serialization_lib_bg.min.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as wasm from"./cardano_serialization_lib.asm.min.js";const heap=new Array(32).fill(void 0);function getObject(t){return heap[t]}heap.push(void 0,null,!0,!1);let heap_next=heap.length;function dropObject(t){t<36||(heap[t]=heap_next,heap_next=t)}function takeObject(t){const r=getObject(t);return dropObject(t),r}let cachedTextDecoder=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});cachedTextDecoder.decode();let cachegetUint8Memory0=null;function getUint8Memory0(){return null!==cachegetUint8Memory0&&cachegetUint8Memory0.buffer===wasm.memory.buffer||(cachegetUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachegetUint8Memory0}function getStringFromWasm0(t,r){return cachedTextDecoder.decode(getUint8Memory0().subarray(t,t+r))}function addHeapObject(t){heap_next===heap.length&&heap.push(heap.length+1);const r=heap_next;return heap_next=heap[r],heap[r]=t,r}let WASM_VECTOR_LEN=0,cachedTextEncoder=new TextEncoder("utf-8");const encodeString="function"==typeof cachedTextEncoder.encodeInto?function(t,r){return cachedTextEncoder.encodeInto(t,r)}:function(t,r){const e=cachedTextEncoder.encode(t);return r.set(e),{read:t.length,written:e.length}};function passStringToWasm0(t,r,e){if(void 0===e){const e=cachedTextEncoder.encode(t),a=r(e.length);return getUint8Memory0().subarray(a,a+e.length).set(e),WASM_VECTOR_LEN=e.length,a}let a=t.length,s=r(a);const _=getUint8Memory0();let n=0;for(;n<a;n++){const r=t.charCodeAt(n);if(r>127)break;_[s+n]=r}if(n!==a){0!==n&&(t=t.slice(n)),s=e(s,a,a=n+3*t.length);const r=getUint8Memory0().subarray(s+n,s+a);n+=encodeString(t,r).written}return WASM_VECTOR_LEN=n,s}function isLikeNone(t){return null==t}let cachegetInt32Memory0=null;function getInt32Memory0(){return null!==cachegetInt32Memory0&&cachegetInt32Memory0.buffer===wasm.memory.buffer||(cachegetInt32Memory0=new Int32Array(wasm.memory.buffer)),cachegetInt32Memory0}function debugString(t){const r=typeof t;if("number"==r||"boolean"==r||null==t)return`${t}`;if("string"==r)return`"${t}"`;if("symbol"==r){const r=t.description;return null==r?"Symbol":`Symbol(${r})`}if("function"==r){const r=t.name;return"string"==typeof r&&r.length>0?`Function(${r})`:"Function"}if(Array.isArray(t)){const r=t.length;let e="[";r>0&&(e+=debugString(t[0]));for(let a=1;a<r;a++)e+=", "+debugString(t[a]);return e+="]",e}const e=/\[object ([^\]]+)\]/.exec(toString.call(t));let a;if(!(e.length>1))return toString.call(t);if(a=e[1],"Object"==a)try{return"Object("+JSON.stringify(t)+")"}catch(t){return"Object"}return t instanceof Error?`${t.name}: ${t.message}\n${t.stack}`:a}function getArrayU8FromWasm0(t,r){return getUint8Memory0().subarray(t/1,t/1+r)}function passArray8ToWasm0(t,r){const e=r(1*t.length);return getUint8Memory0().set(t,e/1),WASM_VECTOR_LEN=t.length,e}function _assertClass(t,r){if(!(t instanceof r))throw new Error(`expected instance of ${r.name}`);return t.ptr}let cachegetUint32Memory0=null;function getUint32Memory0(){return null!==cachegetUint32Memory0&&cachegetUint32Memory0.buffer===wasm.memory.buffer||(cachegetUint32Memory0=new Uint32Array(wasm.memory.buffer)),cachegetUint32Memory0}function getArrayU32FromWasm0(t,r){return getUint32Memory0().subarray(t/4,t/4+r)}function passArray32ToWasm0(t,r){const e=r(4*t.length);return getUint32Memory0().set(t,e/4),WASM_VECTOR_LEN=t.length,e}export function make_daedalus_bootstrap_witness(t,r,e){_assertClass(t,TransactionHash),_assertClass(r,ByronAddress),_assertClass(e,LegacyDaedalusPrivateKey);var a=wasm.make_daedalus_bootstrap_witness(t.ptr,r.ptr,e.ptr);return BootstrapWitness.__wrap(a)}export function make_icarus_bootstrap_witness(t,r,e){_assertClass(t,TransactionHash),_assertClass(r,ByronAddress),_assertClass(e,Bip32PrivateKey);var a=wasm.make_icarus_bootstrap_witness(t.ptr,r.ptr,e.ptr);return BootstrapWitness.__wrap(a)}export function make_vkey_witness(t,r){_assertClass(t,TransactionHash),_assertClass(r,PrivateKey);var e=wasm.make_vkey_witness(t.ptr,r.ptr);return Vkeywitness.__wrap(e)}export function hash_auxiliary_data(t){_assertClass(t,AuxiliaryData);var r=wasm.hash_auxiliary_data(t.ptr);return AuxiliaryDataHash.__wrap(r)}export function hash_transaction(t){_assertClass(t,TransactionBody);var r=wasm.hash_transaction(t.ptr);return TransactionHash.__wrap(r)}export function hash_plutus_data(t){_assertClass(t,PlutusData);var r=wasm.hash_plutus_data(t.ptr);return DataHash.__wrap(r)}export function hash_script_data(t,r,e){_assertClass(t,Redeemers),_assertClass(r,Costmdls);let a=0;isLikeNone(e)||(_assertClass(e,PlutusList),a=e.ptr,e.ptr=0);var s=wasm.hash_script_data(t.ptr,r.ptr,a);return ScriptDataHash.__wrap(s)}export function get_implicit_input(t,r,e){_assertClass(t,TransactionBody),_assertClass(r,BigNum),_assertClass(e,BigNum);var a=wasm.get_implicit_input(t.ptr,r.ptr,e.ptr);return Value.__wrap(a)}export function get_deposit(t,r,e){_assertClass(t,TransactionBody),_assertClass(r,BigNum),_assertClass(e,BigNum);var a=wasm.get_deposit(t.ptr,r.ptr,e.ptr);return BigNum.__wrap(a)}export function min_ada_required(t,r,e){_assertClass(t,Value),_assertClass(e,BigNum);var a=wasm.min_ada_required(t.ptr,r,e.ptr);return BigNum.__wrap(a)}export function encode_json_str_to_native_script(t,r,e){var a=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),s=WASM_VECTOR_LEN,_=passStringToWasm0(r,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),n=WASM_VECTOR_LEN,o=wasm.encode_json_str_to_native_script(a,s,_,n,e);return NativeScript.__wrap(o)}export function encode_arbitrary_bytes_as_metadatum(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.encode_arbitrary_bytes_as_metadatum(r,e);return TransactionMetadatum.__wrap(a)}export function decode_arbitrary_bytes_from_metadatum(t){try{const s=wasm.__wbindgen_add_to_stack_pointer(-16);_assertClass(t,TransactionMetadatum),wasm.decode_arbitrary_bytes_from_metadatum(s,t.ptr);var r=getInt32Memory0()[s/4+0],e=getInt32Memory0()[s/4+1],a=getArrayU8FromWasm0(r,e).slice();return wasm.__wbindgen_free(r,1*e),a}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function encode_json_str_to_metadatum(t,r){var e=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),a=WASM_VECTOR_LEN,s=wasm.encode_json_str_to_metadatum(e,a,r);return TransactionMetadatum.__wrap(s)}export function decode_metadatum_to_json_str(t,r){try{const s=wasm.__wbindgen_add_to_stack_pointer(-16);_assertClass(t,TransactionMetadatum),wasm.decode_metadatum_to_json_str(s,t.ptr,r);var e=getInt32Memory0()[s/4+0],a=getInt32Memory0()[s/4+1];return getStringFromWasm0(e,a)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(e,a)}}export function min_fee(t,r){_assertClass(t,Transaction),_assertClass(r,LinearFee);var e=wasm.min_fee(t.ptr,r.ptr);return BigNum.__wrap(e)}export function encrypt_with_password(t,r,e,a){try{const l=wasm.__wbindgen_add_to_stack_pointer(-16);var s=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),_=WASM_VECTOR_LEN,n=passStringToWasm0(r,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),o=WASM_VECTOR_LEN,i=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),p=WASM_VECTOR_LEN,w=passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),m=WASM_VECTOR_LEN;wasm.encrypt_with_password(l,s,_,n,o,i,p,w,m);var c=getInt32Memory0()[l/4+0],d=getInt32Memory0()[l/4+1];return getStringFromWasm0(c,d)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(c,d)}}export function decrypt_with_password(t,r){try{const i=wasm.__wbindgen_add_to_stack_pointer(-16);var e=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),a=WASM_VECTOR_LEN,s=passStringToWasm0(r,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),_=WASM_VECTOR_LEN;wasm.decrypt_with_password(i,e,a,s,_);var n=getInt32Memory0()[i/4+0],o=getInt32Memory0()[i/4+1];return getStringFromWasm0(n,o)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(n,o)}}function handleError(t,r){try{return t.apply(this,r)}catch(t){wasm.__wbindgen_exn_store(addHeapObject(t))}}export const CertificateKind=Object.freeze({StakeRegistration:0,0:"StakeRegistration",StakeDeregistration:1,1:"StakeDeregistration",StakeDelegation:2,2:"StakeDelegation",PoolRegistration:3,3:"PoolRegistration",PoolRetirement:4,4:"PoolRetirement",GenesisKeyDelegation:5,5:"GenesisKeyDelegation",MoveInstantaneousRewardsCert:6,6:"MoveInstantaneousRewardsCert"});export const MIRPot=Object.freeze({Reserves:0,0:"Reserves",Treasury:1,1:"Treasury"});export const MIRKind=Object.freeze({ToOtherPot:0,0:"ToOtherPot",ToStakeCredentials:1,1:"ToStakeCredentials"});export const RelayKind=Object.freeze({SingleHostAddr:0,0:"SingleHostAddr",SingleHostName:1,1:"SingleHostName",MultiHostName:2,2:"MultiHostName"});export const NativeScriptKind=Object.freeze({ScriptPubkey:0,0:"ScriptPubkey",ScriptAll:1,1:"ScriptAll",ScriptAny:2,2:"ScriptAny",ScriptNOfK:3,3:"ScriptNOfK",TimelockStart:4,4:"TimelockStart",TimelockExpiry:5,5:"TimelockExpiry"});export const ScriptHashNamespace=Object.freeze({NativeScript:0,0:"NativeScript"});export const NetworkIdKind=Object.freeze({Testnet:0,0:"Testnet",Mainnet:1,1:"Mainnet"});export const ScriptSchema=Object.freeze({Wallet:0,0:"Wallet",Node:1,1:"Node"});export const TransactionMetadatumKind=Object.freeze({MetadataMap:0,0:"MetadataMap",MetadataList:1,1:"MetadataList",Int:2,2:"Int",Bytes:3,3:"Bytes",Text:4,4:"Text"});export const MetadataJsonSchema=Object.freeze({NoConversions:0,0:"NoConversions",BasicConversions:1,1:"BasicConversions",DetailedSchema:2,2:"DetailedSchema"});export const CoinSelectionStrategyCIP2=Object.freeze({LargestFirst:0,0:"LargestFirst",RandomImprove:1,1:"RandomImprove",LargestFirstMultiAsset:2,2:"LargestFirstMultiAsset",RandomImproveMultiAsset:3,3:"RandomImproveMultiAsset"});export const StakeCredKind=Object.freeze({Key:0,0:"Key",Script:1,1:"Script"});export const LanguageKind=Object.freeze({PlutusV1:0,0:"PlutusV1"});export const PlutusDataKind=Object.freeze({ConstrPlutusData:0,0:"ConstrPlutusData",Map:1,1:"Map",List:2,2:"List",Integer:3,3:"Integer",Bytes:4,4:"Bytes"});export const RedeemerTagKind=Object.freeze({Spend:0,0:"Spend",Mint:1,1:"Mint",Cert:2,2:"Cert",Reward:3,3:"Reward"});export class Address{static __wrap(t){const r=Object.create(Address.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_address_free(t)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.address_from_bytes(r,e);return Address.__wrap(a)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.address_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=isLikeNone(t)?0:passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.address_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.address_from_bech32(r,e);return Address.__wrap(a)}network_id(){return wasm.address_network_id(this.ptr)}}export class AssetName{static __wrap(t){const r=Object.create(AssetName.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_assetname_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.assetname_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.assetname_from_bytes(r,e);return AssetName.__wrap(a)}static new(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.assetname_new(r,e);return AssetName.__wrap(a)}name(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.assetname_name(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class AssetNames{static __wrap(t){const r=Object.create(AssetNames.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_assetnames_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.assetnames_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.assetnames_from_bytes(r,e);return AssetNames.__wrap(a)}static new(){var t=wasm.assetnames_new();return AssetNames.__wrap(t)}len(){return wasm.assetnames_len(this.ptr)>>>0}get(t){var r=wasm.assetnames_get(this.ptr,t);return AssetName.__wrap(r)}add(t){_assertClass(t,AssetName),wasm.assetnames_add(this.ptr,t.ptr)}}export class Assets{static __wrap(t){const r=Object.create(Assets.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_assets_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.assets_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.assets_from_bytes(r,e);return Assets.__wrap(a)}static new(){var t=wasm.assets_new();return Assets.__wrap(t)}len(){return wasm.assets_len(this.ptr)>>>0}insert(t,r){_assertClass(t,AssetName),_assertClass(r,BigNum);var e=wasm.assets_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:BigNum.__wrap(e)}get(t){_assertClass(t,AssetName);var r=wasm.assets_get(this.ptr,t.ptr);return 0===r?void 0:BigNum.__wrap(r)}keys(){var t=wasm.assets_keys(this.ptr);return AssetNames.__wrap(t)}}export class AuxiliaryData{static __wrap(t){const r=Object.create(AuxiliaryData.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_auxiliarydata_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.auxiliarydata_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.auxiliarydata_from_bytes(r,e);return AuxiliaryData.__wrap(a)}static new(){var t=wasm.auxiliarydata_new();return AuxiliaryData.__wrap(t)}metadata(){var t=wasm.auxiliarydata_metadata(this.ptr);return 0===t?void 0:GeneralTransactionMetadata.__wrap(t)}set_metadata(t){_assertClass(t,GeneralTransactionMetadata),wasm.auxiliarydata_set_metadata(this.ptr,t.ptr)}native_scripts(){var t=wasm.auxiliarydata_native_scripts(this.ptr);return 0===t?void 0:NativeScripts.__wrap(t)}set_native_scripts(t){_assertClass(t,NativeScripts),wasm.auxiliarydata_set_native_scripts(this.ptr,t.ptr)}plutus_scripts(){var t=wasm.auxiliarydata_plutus_scripts(this.ptr);return 0===t?void 0:PlutusScripts.__wrap(t)}set_plutus_scripts(t){_assertClass(t,PlutusScripts),wasm.auxiliarydata_set_plutus_scripts(this.ptr,t.ptr)}}export class AuxiliaryDataHash{static __wrap(t){const r=Object.create(AuxiliaryDataHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_auxiliarydatahash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.auxiliarydatahash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.auxiliarydatahash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.auxiliarydatahash_from_bech32(r,e);return AuxiliaryDataHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.auxiliarydatahash_from_bytes(r,e);return AuxiliaryDataHash.__wrap(a)}}export class AuxiliaryDataSet{static __wrap(t){const r=Object.create(AuxiliaryDataSet.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_auxiliarydataset_free(t)}static new(){var t=wasm.auxiliarydataset_new();return AuxiliaryDataSet.__wrap(t)}len(){return wasm.auxiliarydataset_len(this.ptr)>>>0}insert(t,r){_assertClass(r,AuxiliaryData);var e=wasm.auxiliarydataset_insert(this.ptr,t,r.ptr);return 0===e?void 0:AuxiliaryData.__wrap(e)}get(t){var r=wasm.auxiliarydataset_get(this.ptr,t);return 0===r?void 0:AuxiliaryData.__wrap(r)}indices(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.auxiliarydataset_indices(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU32FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,4*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class BaseAddress{static __wrap(t){const r=Object.create(BaseAddress.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_baseaddress_free(t)}static new(t,r,e){_assertClass(r,StakeCredential),_assertClass(e,StakeCredential);var a=wasm.baseaddress_new(t,r.ptr,e.ptr);return BaseAddress.__wrap(a)}payment_cred(){var t=wasm.baseaddress_payment_cred(this.ptr);return StakeCredential.__wrap(t)}stake_cred(){var t=wasm.baseaddress_stake_cred(this.ptr);return StakeCredential.__wrap(t)}to_address(){var t=wasm.baseaddress_to_address(this.ptr);return Address.__wrap(t)}static from_address(t){_assertClass(t,Address);var r=wasm.baseaddress_from_address(t.ptr);return 0===r?void 0:BaseAddress.__wrap(r)}}export class BigInt{static __wrap(t){const r=Object.create(BigInt.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_bigint_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bigint_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.bigint_from_bytes(r,e);return BigInt.__wrap(a)}as_u64(){var t=wasm.bigint_as_u64(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}static from_str(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.bigint_from_str(r,e);return BigInt.__wrap(a)}to_str(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bigint_to_str(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}}export class BigNum{static __wrap(t){const r=Object.create(BigNum.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_bignum_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bignum_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.bignum_from_bytes(r,e);return BigNum.__wrap(a)}static from_str(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.bignum_from_str(r,e);return BigNum.__wrap(a)}to_str(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bignum_to_str(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}static zero(){var t=wasm.bignum_zero();return BigNum.__wrap(t)}is_zero(){return 0!==wasm.bignum_is_zero(this.ptr)}checked_mul(t){_assertClass(t,BigNum);var r=wasm.bignum_checked_mul(this.ptr,t.ptr);return BigNum.__wrap(r)}checked_add(t){_assertClass(t,BigNum);var r=wasm.bignum_checked_add(this.ptr,t.ptr);return BigNum.__wrap(r)}checked_sub(t){_assertClass(t,BigNum);var r=wasm.bignum_checked_sub(this.ptr,t.ptr);return BigNum.__wrap(r)}clamped_sub(t){_assertClass(t,BigNum);var r=wasm.bignum_clamped_sub(this.ptr,t.ptr);return BigNum.__wrap(r)}compare(t){return _assertClass(t,BigNum),wasm.bignum_compare(this.ptr,t.ptr)}}export class Bip32PrivateKey{static __wrap(t){const r=Object.create(Bip32PrivateKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_bip32privatekey_free(t)}derive(t){var r=wasm.bip32privatekey_derive(this.ptr,t);return Bip32PrivateKey.__wrap(r)}static from_128_xprv(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.bip32privatekey_from_128_xprv(r,e);return Bip32PrivateKey.__wrap(a)}to_128_xprv(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32privatekey_to_128_xprv(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static generate_ed25519_bip32(){var t=wasm.bip32privatekey_generate_ed25519_bip32();return Bip32PrivateKey.__wrap(t)}to_raw_key(){var t=wasm.bip32privatekey_to_raw_key(this.ptr);return PrivateKey.__wrap(t)}to_public(){var t=wasm.bip32privatekey_to_public(this.ptr);return Bip32PublicKey.__wrap(t)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.bip32privatekey_from_bytes(r,e);return Bip32PrivateKey.__wrap(a)}as_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32privatekey_as_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.bip32privatekey_from_bech32(r,e);return Bip32PrivateKey.__wrap(a)}to_bech32(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32privatekey_to_bech32(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}static from_bip39_entropy(t,r){var e=passArray8ToWasm0(t,wasm.__wbindgen_malloc),a=WASM_VECTOR_LEN,s=passArray8ToWasm0(r,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,n=wasm.bip32privatekey_from_bip39_entropy(e,a,s,_);return Bip32PrivateKey.__wrap(n)}chaincode(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32privatekey_chaincode(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class Bip32PublicKey{static __wrap(t){const r=Object.create(Bip32PublicKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_bip32publickey_free(t)}derive(t){var r=wasm.bip32publickey_derive(this.ptr,t);return Bip32PublicKey.__wrap(r)}to_raw_key(){var t=wasm.bip32publickey_to_raw_key(this.ptr);return PublicKey.__wrap(t)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.bip32publickey_from_bytes(r,e);return Bip32PublicKey.__wrap(a)}as_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32publickey_as_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.bip32publickey_from_bech32(r,e);return Bip32PublicKey.__wrap(a)}to_bech32(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32publickey_to_bech32(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}chaincode(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bip32publickey_chaincode(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class Block{static __wrap(t){const r=Object.create(Block.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_block_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.block_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.block_from_bytes(r,e);return Block.__wrap(a)}header(){var t=wasm.block_header(this.ptr);return Header.__wrap(t)}transaction_bodies(){var t=wasm.block_transaction_bodies(this.ptr);return TransactionBodies.__wrap(t)}transaction_witness_sets(){var t=wasm.block_transaction_witness_sets(this.ptr);return TransactionWitnessSets.__wrap(t)}auxiliary_data_set(){var t=wasm.block_auxiliary_data_set(this.ptr);return AuxiliaryDataSet.__wrap(t)}invalid_transactions(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.block_invalid_transactions(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU32FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,4*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static new(t,r,e,a,s){_assertClass(t,Header),_assertClass(r,TransactionBodies),_assertClass(e,TransactionWitnessSets),_assertClass(a,AuxiliaryDataSet);var _=passArray32ToWasm0(s,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN,o=wasm.block_new(t.ptr,r.ptr,e.ptr,a.ptr,_,n);return Block.__wrap(o)}}export class BlockHash{static __wrap(t){const r=Object.create(BlockHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_blockhash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.blockhash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.blockhash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.blockhash_from_bech32(r,e);return BlockHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.blockhash_from_bytes(r,e);return BlockHash.__wrap(a)}}export class BootstrapWitness{static __wrap(t){const r=Object.create(BootstrapWitness.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_bootstrapwitness_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bootstrapwitness_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.bootstrapwitness_from_bytes(r,e);return BootstrapWitness.__wrap(a)}vkey(){var t=wasm.bootstrapwitness_vkey(this.ptr);return Vkey.__wrap(t)}signature(){var t=wasm.bootstrapwitness_signature(this.ptr);return Ed25519Signature.__wrap(t)}chain_code(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bootstrapwitness_chain_code(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}attributes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.bootstrapwitness_attributes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static new(t,r,e,a){_assertClass(t,Vkey),_assertClass(r,Ed25519Signature);var s=passArray8ToWasm0(e,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,n=passArray8ToWasm0(a,wasm.__wbindgen_malloc),o=WASM_VECTOR_LEN,i=wasm.bootstrapwitness_new(t.ptr,r.ptr,s,_,n,o);return BootstrapWitness.__wrap(i)}}export class BootstrapWitnesses{static __wrap(t){const r=Object.create(BootstrapWitnesses.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_bootstrapwitnesses_free(t)}static new(){var t=wasm.bootstrapwitnesses_new();return BootstrapWitnesses.__wrap(t)}len(){return wasm.bootstrapwitnesses_len(this.ptr)>>>0}get(t){var r=wasm.bootstrapwitnesses_get(this.ptr,t);return BootstrapWitness.__wrap(r)}add(t){_assertClass(t,BootstrapWitness),wasm.bootstrapwitnesses_add(this.ptr,t.ptr)}}export class ByronAddress{static __wrap(t){const r=Object.create(ByronAddress.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_byronaddress_free(t)}to_base58(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.byronaddress_to_base58(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.byronaddress_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.byronaddress_from_bytes(r,e);return ByronAddress.__wrap(a)}byron_protocol_magic(){return wasm.byronaddress_byron_protocol_magic(this.ptr)>>>0}attributes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.byronaddress_attributes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}network_id(){return wasm.byronaddress_network_id(this.ptr)}static from_base58(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.byronaddress_from_base58(r,e);return ByronAddress.__wrap(a)}static icarus_from_key(t,r){_assertClass(t,Bip32PublicKey);var e=wasm.byronaddress_icarus_from_key(t.ptr,r);return ByronAddress.__wrap(e)}static is_valid(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;return 0!==wasm.byronaddress_is_valid(r,e)}to_address(){var t=wasm.byronaddress_to_address(this.ptr);return Address.__wrap(t)}static from_address(t){_assertClass(t,Address);var r=wasm.byronaddress_from_address(t.ptr);return 0===r?void 0:ByronAddress.__wrap(r)}}export class Certificate{static __wrap(t){const r=Object.create(Certificate.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_certificate_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.certificate_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.certificate_from_bytes(r,e);return Certificate.__wrap(a)}static new_stake_registration(t){_assertClass(t,StakeRegistration);var r=wasm.certificate_new_stake_registration(t.ptr);return Certificate.__wrap(r)}static new_stake_deregistration(t){_assertClass(t,StakeDeregistration);var r=wasm.certificate_new_stake_deregistration(t.ptr);return Certificate.__wrap(r)}static new_stake_delegation(t){_assertClass(t,StakeDelegation);var r=wasm.certificate_new_stake_delegation(t.ptr);return Certificate.__wrap(r)}static new_pool_registration(t){_assertClass(t,PoolRegistration);var r=wasm.certificate_new_pool_registration(t.ptr);return Certificate.__wrap(r)}static new_pool_retirement(t){_assertClass(t,PoolRetirement);var r=wasm.certificate_new_pool_retirement(t.ptr);return Certificate.__wrap(r)}static new_genesis_key_delegation(t){_assertClass(t,GenesisKeyDelegation);var r=wasm.certificate_new_genesis_key_delegation(t.ptr);return Certificate.__wrap(r)}static new_move_instantaneous_rewards_cert(t){_assertClass(t,MoveInstantaneousRewardsCert);var r=wasm.certificate_new_move_instantaneous_rewards_cert(t.ptr);return Certificate.__wrap(r)}kind(){return wasm.certificate_kind(this.ptr)>>>0}as_stake_registration(){var t=wasm.certificate_as_stake_registration(this.ptr);return 0===t?void 0:StakeRegistration.__wrap(t)}as_stake_deregistration(){var t=wasm.certificate_as_stake_deregistration(this.ptr);return 0===t?void 0:StakeDeregistration.__wrap(t)}as_stake_delegation(){var t=wasm.certificate_as_stake_delegation(this.ptr);return 0===t?void 0:StakeDelegation.__wrap(t)}as_pool_registration(){var t=wasm.certificate_as_pool_registration(this.ptr);return 0===t?void 0:PoolRegistration.__wrap(t)}as_pool_retirement(){var t=wasm.certificate_as_pool_retirement(this.ptr);return 0===t?void 0:PoolRetirement.__wrap(t)}as_genesis_key_delegation(){var t=wasm.certificate_as_genesis_key_delegation(this.ptr);return 0===t?void 0:GenesisKeyDelegation.__wrap(t)}as_move_instantaneous_rewards_cert(){var t=wasm.certificate_as_move_instantaneous_rewards_cert(this.ptr);return 0===t?void 0:MoveInstantaneousRewardsCert.__wrap(t)}}export class Certificates{static __wrap(t){const r=Object.create(Certificates.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_certificates_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.certificates_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.certificates_from_bytes(r,e);return Certificates.__wrap(a)}static new(){var t=wasm.certificates_new();return Certificates.__wrap(t)}len(){return wasm.certificates_len(this.ptr)>>>0}get(t){var r=wasm.certificates_get(this.ptr,t);return Certificate.__wrap(r)}add(t){_assertClass(t,Certificate),wasm.certificates_add(this.ptr,t.ptr)}}export class ConstrPlutusData{static __wrap(t){const r=Object.create(ConstrPlutusData.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_constrplutusdata_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.constrplutusdata_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.constrplutusdata_from_bytes(r,e);return ConstrPlutusData.__wrap(a)}alternative(){var t=wasm.constrplutusdata_alternative(this.ptr);return BigNum.__wrap(t)}data(){var t=wasm.constrplutusdata_data(this.ptr);return PlutusList.__wrap(t)}static new(t,r){_assertClass(t,BigNum),_assertClass(r,PlutusList);var e=wasm.constrplutusdata_new(t.ptr,r.ptr);return ConstrPlutusData.__wrap(e)}}export class CostModel{static __wrap(t){const r=Object.create(CostModel.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_costmodel_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.costmodel_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.costmodel_from_bytes(r,e);return CostModel.__wrap(a)}static new(){var t=wasm.costmodel_new();return CostModel.__wrap(t)}set(t,r){_assertClass(r,Int);var e=wasm.costmodel_set(this.ptr,t,r.ptr);return Int.__wrap(e)}get(t){var r=wasm.costmodel_get(this.ptr,t);return Int.__wrap(r)}}export class Costmdls{static __wrap(t){const r=Object.create(Costmdls.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_costmdls_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.costmdls_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.costmdls_from_bytes(r,e);return Costmdls.__wrap(a)}static new(){var t=wasm.costmdls_new();return Costmdls.__wrap(t)}len(){return wasm.costmdls_len(this.ptr)>>>0}insert(t,r){_assertClass(t,Language),_assertClass(r,CostModel);var e=wasm.costmdls_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:CostModel.__wrap(e)}get(t){_assertClass(t,Language);var r=wasm.costmdls_get(this.ptr,t.ptr);return 0===r?void 0:CostModel.__wrap(r)}keys(){var t=wasm.costmdls_keys(this.ptr);return Languages.__wrap(t)}}export class DNSRecordAorAAAA{static __wrap(t){const r=Object.create(DNSRecordAorAAAA.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_dnsrecordaoraaaa_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.dnsrecordaoraaaa_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.dnsrecordaoraaaa_from_bytes(r,e);return DNSRecordAorAAAA.__wrap(a)}static new(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.dnsrecordaoraaaa_new(r,e);return DNSRecordAorAAAA.__wrap(a)}record(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.dnsrecordaoraaaa_record(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}}export class DNSRecordSRV{static __wrap(t){const r=Object.create(DNSRecordSRV.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_dnsrecordsrv_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.dnsrecordsrv_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.dnsrecordsrv_from_bytes(r,e);return DNSRecordSRV.__wrap(a)}static new(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.dnsrecordsrv_new(r,e);return DNSRecordSRV.__wrap(a)}record(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.dnsrecordsrv_record(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}}export class DataHash{static __wrap(t){const r=Object.create(DataHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_datahash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.datahash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.datahash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.datahash_from_bech32(r,e);return DataHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.datahash_from_bytes(r,e);return DataHash.__wrap(a)}}export class Ed25519KeyHash{static __wrap(t){const r=Object.create(Ed25519KeyHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_ed25519keyhash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ed25519keyhash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.ed25519keyhash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.ed25519keyhash_from_bech32(r,e);return Ed25519KeyHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ed25519keyhash_from_bytes(r,e);return Ed25519KeyHash.__wrap(a)}}export class Ed25519KeyHashes{static __wrap(t){const r=Object.create(Ed25519KeyHashes.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_ed25519keyhashes_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ed25519keyhashes_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ed25519keyhashes_from_bytes(r,e);return Ed25519KeyHashes.__wrap(a)}static new(){var t=wasm.ed25519keyhashes_new();return Ed25519KeyHashes.__wrap(t)}len(){return wasm.ed25519keyhashes_len(this.ptr)>>>0}get(t){var r=wasm.ed25519keyhashes_get(this.ptr,t);return Ed25519KeyHash.__wrap(r)}add(t){_assertClass(t,Ed25519KeyHash),wasm.ed25519keyhashes_add(this.ptr,t.ptr)}}export class Ed25519Signature{static __wrap(t){const r=Object.create(Ed25519Signature.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_ed25519signature_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ed25519signature_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ed25519signature_to_bech32(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}to_hex(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ed25519signature_to_hex(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.ed25519signature_from_bech32(r,e);return Ed25519Signature.__wrap(a)}static from_hex(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.ed25519signature_from_hex(r,e);return Ed25519Signature.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ed25519signature_from_bytes(r,e);return Ed25519Signature.__wrap(a)}}export class EnterpriseAddress{static __wrap(t){const r=Object.create(EnterpriseAddress.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_enterpriseaddress_free(t)}static new(t,r){_assertClass(r,StakeCredential);var e=wasm.enterpriseaddress_new(t,r.ptr);return EnterpriseAddress.__wrap(e)}payment_cred(){var t=wasm.enterpriseaddress_payment_cred(this.ptr);return StakeCredential.__wrap(t)}to_address(){var t=wasm.enterpriseaddress_to_address(this.ptr);return Address.__wrap(t)}static from_address(t){_assertClass(t,Address);var r=wasm.enterpriseaddress_from_address(t.ptr);return 0===r?void 0:EnterpriseAddress.__wrap(r)}}export class ExUnitPrices{static __wrap(t){const r=Object.create(ExUnitPrices.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_exunitprices_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.exunitprices_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.exunitprices_from_bytes(r,e);return ExUnitPrices.__wrap(a)}mem_price(){var t=wasm.exunitprices_mem_price(this.ptr);return UnitInterval.__wrap(t)}step_price(){var t=wasm.exunitprices_step_price(this.ptr);return UnitInterval.__wrap(t)}static new(t,r){_assertClass(t,UnitInterval),_assertClass(r,UnitInterval);var e=wasm.exunitprices_new(t.ptr,r.ptr);return ExUnitPrices.__wrap(e)}}export class ExUnits{static __wrap(t){const r=Object.create(ExUnits.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_exunits_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.exunits_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.exunits_from_bytes(r,e);return ExUnits.__wrap(a)}mem(){var t=wasm.exunits_mem(this.ptr);return BigNum.__wrap(t)}steps(){var t=wasm.exunits_steps(this.ptr);return BigNum.__wrap(t)}static new(t,r){_assertClass(t,BigNum),_assertClass(r,BigNum);var e=wasm.exunits_new(t.ptr,r.ptr);return ExUnits.__wrap(e)}}export class GeneralTransactionMetadata{static __wrap(t){const r=Object.create(GeneralTransactionMetadata.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_generaltransactionmetadata_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.generaltransactionmetadata_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.generaltransactionmetadata_from_bytes(r,e);return GeneralTransactionMetadata.__wrap(a)}static new(){var t=wasm.generaltransactionmetadata_new();return GeneralTransactionMetadata.__wrap(t)}len(){return wasm.generaltransactionmetadata_len(this.ptr)>>>0}insert(t,r){_assertClass(t,BigNum),_assertClass(r,TransactionMetadatum);var e=wasm.generaltransactionmetadata_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:TransactionMetadatum.__wrap(e)}get(t){_assertClass(t,BigNum);var r=wasm.generaltransactionmetadata_get(this.ptr,t.ptr);return 0===r?void 0:TransactionMetadatum.__wrap(r)}keys(){var t=wasm.generaltransactionmetadata_keys(this.ptr);return TransactionMetadatumLabels.__wrap(t)}}export class GenesisDelegateHash{static __wrap(t){const r=Object.create(GenesisDelegateHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_genesisdelegatehash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.genesisdelegatehash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.genesisdelegatehash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.genesisdelegatehash_from_bech32(r,e);return GenesisDelegateHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.genesisdelegatehash_from_bytes(r,e);return GenesisDelegateHash.__wrap(a)}}export class GenesisHash{static __wrap(t){const r=Object.create(GenesisHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_genesishash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.genesishash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.genesishash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.genesishash_from_bech32(r,e);return GenesisHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.genesishash_from_bytes(r,e);return GenesisHash.__wrap(a)}}export class GenesisHashes{static __wrap(t){const r=Object.create(GenesisHashes.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_genesishashes_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.genesishashes_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.genesishashes_from_bytes(r,e);return GenesisHashes.__wrap(a)}static new(){var t=wasm.genesishashes_new();return GenesisHashes.__wrap(t)}len(){return wasm.genesishashes_len(this.ptr)>>>0}get(t){var r=wasm.genesishashes_get(this.ptr,t);return GenesisHash.__wrap(r)}add(t){_assertClass(t,GenesisHash),wasm.genesishashes_add(this.ptr,t.ptr)}}export class GenesisKeyDelegation{static __wrap(t){const r=Object.create(GenesisKeyDelegation.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_genesiskeydelegation_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.genesiskeydelegation_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.genesiskeydelegation_from_bytes(r,e);return GenesisKeyDelegation.__wrap(a)}genesishash(){var t=wasm.genesiskeydelegation_genesishash(this.ptr);return GenesisHash.__wrap(t)}genesis_delegate_hash(){var t=wasm.genesiskeydelegation_genesis_delegate_hash(this.ptr);return GenesisDelegateHash.__wrap(t)}vrf_keyhash(){var t=wasm.genesiskeydelegation_vrf_keyhash(this.ptr);return VRFKeyHash.__wrap(t)}static new(t,r,e){_assertClass(t,GenesisHash),_assertClass(r,GenesisDelegateHash),_assertClass(e,VRFKeyHash);var a=wasm.genesiskeydelegation_new(t.ptr,r.ptr,e.ptr);return GenesisKeyDelegation.__wrap(a)}}export class Header{static __wrap(t){const r=Object.create(Header.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_header_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.header_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.header_from_bytes(r,e);return Header.__wrap(a)}header_body(){var t=wasm.header_header_body(this.ptr);return HeaderBody.__wrap(t)}body_signature(){var t=wasm.header_body_signature(this.ptr);return KESSignature.__wrap(t)}static new(t,r){_assertClass(t,HeaderBody),_assertClass(r,KESSignature);var e=wasm.header_new(t.ptr,r.ptr);return Header.__wrap(e)}}export class HeaderBody{static __wrap(t){const r=Object.create(HeaderBody.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_headerbody_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.headerbody_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.headerbody_from_bytes(r,e);return HeaderBody.__wrap(a)}block_number(){return wasm.headerbody_block_number(this.ptr)>>>0}slot(){return wasm.headerbody_slot(this.ptr)>>>0}prev_hash(){var t=wasm.headerbody_prev_hash(this.ptr);return 0===t?void 0:BlockHash.__wrap(t)}issuer_vkey(){var t=wasm.headerbody_issuer_vkey(this.ptr);return Vkey.__wrap(t)}vrf_vkey(){var t=wasm.headerbody_vrf_vkey(this.ptr);return VRFVKey.__wrap(t)}nonce_vrf(){var t=wasm.headerbody_nonce_vrf(this.ptr);return VRFCert.__wrap(t)}leader_vrf(){var t=wasm.headerbody_leader_vrf(this.ptr);return VRFCert.__wrap(t)}block_body_size(){return wasm.headerbody_block_body_size(this.ptr)>>>0}block_body_hash(){var t=wasm.headerbody_block_body_hash(this.ptr);return BlockHash.__wrap(t)}operational_cert(){var t=wasm.headerbody_operational_cert(this.ptr);return OperationalCert.__wrap(t)}protocol_version(){var t=wasm.headerbody_protocol_version(this.ptr);return ProtocolVersion.__wrap(t)}static new(t,r,e,a,s,_,n,o,i,p,w){let m=0;isLikeNone(e)||(_assertClass(e,BlockHash),m=e.ptr,e.ptr=0),_assertClass(a,Vkey),_assertClass(s,VRFVKey),_assertClass(_,VRFCert),_assertClass(n,VRFCert),_assertClass(i,BlockHash),_assertClass(p,OperationalCert),_assertClass(w,ProtocolVersion);var c=wasm.headerbody_new(t,r,m,a.ptr,s.ptr,_.ptr,n.ptr,o,i.ptr,p.ptr,w.ptr);return HeaderBody.__wrap(c)}}export class Int{static __wrap(t){const r=Object.create(Int.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_int_free(t)}static new(t){_assertClass(t,BigNum);var r=wasm.int_new(t.ptr);return Int.__wrap(r)}static new_negative(t){_assertClass(t,BigNum);var r=wasm.int_new_negative(t.ptr);return Int.__wrap(r)}static new_i32(t){var r=wasm.int_new_i32(t);return Int.__wrap(r)}is_positive(){return 0!==wasm.int_is_positive(this.ptr)}as_positive(){var t=wasm.int_as_positive(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}as_negative(){var t=wasm.int_as_negative(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}as_i32(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.int_as_i32(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}as_i32_or_nothing(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.int_as_i32_or_nothing(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}as_i32_or_fail(){return wasm.int_as_i32_or_fail(this.ptr)}to_str(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.int_to_str(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}}export class Ipv4{static __wrap(t){const r=Object.create(Ipv4.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_ipv4_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ipv4_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ipv4_from_bytes(r,e);return Ipv4.__wrap(a)}static new(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ipv4_new(r,e);return Ipv4.__wrap(a)}ip(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ipv4_ip(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class Ipv6{static __wrap(t){const r=Object.create(Ipv6.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_ipv6_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ipv6_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ipv6_from_bytes(r,e);return Ipv6.__wrap(a)}static new(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.ipv6_new(r,e);return Ipv6.__wrap(a)}ip(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.ipv6_ip(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class KESSignature{static __wrap(t){const r=Object.create(KESSignature.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_kessignature_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.kessignature_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.kessignature_from_bytes(r,e);return KESSignature.__wrap(a)}}export class KESVKey{static __wrap(t){const r=Object.create(KESVKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_kesvkey_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.kesvkey_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.kesvkey_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.kesvkey_from_bech32(r,e);return KESVKey.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.kesvkey_from_bytes(r,e);return KESVKey.__wrap(a)}}export class Language{static __wrap(t){const r=Object.create(Language.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_language_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.language_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.language_from_bytes(r,e);return Language.__wrap(a)}static new_plutus_v1(){var t=wasm.language_new_plutus_v1();return Language.__wrap(t)}kind(){return wasm.language_kind(this.ptr)>>>0}}export class Languages{static __wrap(t){const r=Object.create(Languages.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_languages_free(t)}static new(){var t=wasm.languages_new();return Languages.__wrap(t)}len(){return wasm.languages_len(this.ptr)>>>0}get(t){var r=wasm.languages_get(this.ptr,t);return Language.__wrap(r)}add(t){_assertClass(t,Language);var r=t.ptr;t.ptr=0,wasm.languages_add(this.ptr,r)}}export class LegacyDaedalusPrivateKey{static __wrap(t){const r=Object.create(LegacyDaedalusPrivateKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_legacydaedalusprivatekey_free(t)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.legacydaedalusprivatekey_from_bytes(r,e);return LegacyDaedalusPrivateKey.__wrap(a)}as_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.legacydaedalusprivatekey_as_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}chaincode(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.legacydaedalusprivatekey_chaincode(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class LinearFee{static __wrap(t){const r=Object.create(LinearFee.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_linearfee_free(t)}constant(){var t=wasm.linearfee_constant(this.ptr);return BigNum.__wrap(t)}coefficient(){var t=wasm.linearfee_coefficient(this.ptr);return BigNum.__wrap(t)}static new(t,r){_assertClass(t,BigNum),_assertClass(r,BigNum);var e=wasm.linearfee_new(t.ptr,r.ptr);return LinearFee.__wrap(e)}}export class MIRToStakeCredentials{static __wrap(t){const r=Object.create(MIRToStakeCredentials.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_mirtostakecredentials_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.mirtostakecredentials_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.mirtostakecredentials_from_bytes(r,e);return MIRToStakeCredentials.__wrap(a)}static new(){var t=wasm.mirtostakecredentials_new();return MIRToStakeCredentials.__wrap(t)}len(){return wasm.mirtostakecredentials_len(this.ptr)>>>0}insert(t,r){_assertClass(t,StakeCredential),_assertClass(r,Int);var e=wasm.mirtostakecredentials_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:Int.__wrap(e)}get(t){_assertClass(t,StakeCredential);var r=wasm.mirtostakecredentials_get(this.ptr,t.ptr);return 0===r?void 0:Int.__wrap(r)}keys(){var t=wasm.mirtostakecredentials_keys(this.ptr);return StakeCredentials.__wrap(t)}}export class MetadataList{static __wrap(t){const r=Object.create(MetadataList.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_metadatalist_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.metadatalist_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.metadatalist_from_bytes(r,e);return MetadataList.__wrap(a)}static new(){var t=wasm.metadatalist_new();return MetadataList.__wrap(t)}len(){return wasm.metadatalist_len(this.ptr)>>>0}get(t){var r=wasm.metadatalist_get(this.ptr,t);return TransactionMetadatum.__wrap(r)}add(t){_assertClass(t,TransactionMetadatum),wasm.metadatalist_add(this.ptr,t.ptr)}}export class MetadataMap{static __wrap(t){const r=Object.create(MetadataMap.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_metadatamap_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.metadatamap_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.metadatamap_from_bytes(r,e);return MetadataMap.__wrap(a)}static new(){var t=wasm.metadatamap_new();return MetadataMap.__wrap(t)}len(){return wasm.metadatamap_len(this.ptr)>>>0}insert(t,r){_assertClass(t,TransactionMetadatum),_assertClass(r,TransactionMetadatum);var e=wasm.metadatamap_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:TransactionMetadatum.__wrap(e)}insert_str(t,r){var e=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),a=WASM_VECTOR_LEN;_assertClass(r,TransactionMetadatum);var s=wasm.metadatamap_insert_str(this.ptr,e,a,r.ptr);return 0===s?void 0:TransactionMetadatum.__wrap(s)}insert_i32(t,r){_assertClass(r,TransactionMetadatum);var e=wasm.metadatamap_insert_i32(this.ptr,t,r.ptr);return 0===e?void 0:TransactionMetadatum.__wrap(e)}get(t){_assertClass(t,TransactionMetadatum);var r=wasm.metadatamap_get(this.ptr,t.ptr);return TransactionMetadatum.__wrap(r)}get_str(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.metadatamap_get_str(this.ptr,r,e);return TransactionMetadatum.__wrap(a)}get_i32(t){var r=wasm.metadatamap_get_i32(this.ptr,t);return TransactionMetadatum.__wrap(r)}has(t){return _assertClass(t,TransactionMetadatum),0!==wasm.metadatamap_has(this.ptr,t.ptr)}keys(){var t=wasm.metadatamap_keys(this.ptr);return MetadataList.__wrap(t)}}export class Mint{static __wrap(t){const r=Object.create(Mint.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_mint_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.mint_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.mint_from_bytes(r,e);return Mint.__wrap(a)}static new(){var t=wasm.mint_new();return Mint.__wrap(t)}static new_from_entry(t,r){_assertClass(t,ScriptHash),_assertClass(r,MintAssets);var e=wasm.mint_new_from_entry(t.ptr,r.ptr);return Mint.__wrap(e)}len(){return wasm.mint_len(this.ptr)>>>0}insert(t,r){_assertClass(t,ScriptHash),_assertClass(r,MintAssets);var e=wasm.mint_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:MintAssets.__wrap(e)}get(t){_assertClass(t,ScriptHash);var r=wasm.mint_get(this.ptr,t.ptr);return 0===r?void 0:MintAssets.__wrap(r)}keys(){var t=wasm.mint_keys(this.ptr);return ScriptHashes.__wrap(t)}as_positive_multiasset(){var t=wasm.mint_as_positive_multiasset(this.ptr);return MultiAsset.__wrap(t)}as_negative_multiasset(){var t=wasm.mint_as_negative_multiasset(this.ptr);return MultiAsset.__wrap(t)}}export class MintAssets{static __wrap(t){const r=Object.create(MintAssets.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_mintassets_free(t)}static new(){var t=wasm.mintassets_new();return MintAssets.__wrap(t)}static new_from_entry(t,r){_assertClass(t,AssetName),_assertClass(r,Int);var e=r.ptr;r.ptr=0;var a=wasm.mintassets_new_from_entry(t.ptr,e);return MintAssets.__wrap(a)}len(){return wasm.mintassets_len(this.ptr)>>>0}insert(t,r){_assertClass(t,AssetName),_assertClass(r,Int);var e=r.ptr;r.ptr=0;var a=wasm.mintassets_insert(this.ptr,t.ptr,e);return 0===a?void 0:Int.__wrap(a)}get(t){_assertClass(t,AssetName);var r=wasm.mintassets_get(this.ptr,t.ptr);return 0===r?void 0:Int.__wrap(r)}keys(){var t=wasm.mintassets_keys(this.ptr);return AssetNames.__wrap(t)}}export class MoveInstantaneousReward{static __wrap(t){const r=Object.create(MoveInstantaneousReward.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_moveinstantaneousreward_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.moveinstantaneousreward_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.moveinstantaneousreward_from_bytes(r,e);return MoveInstantaneousReward.__wrap(a)}static new_to_other_pot(t,r){_assertClass(r,BigNum);var e=wasm.moveinstantaneousreward_new_to_other_pot(t,r.ptr);return MoveInstantaneousReward.__wrap(e)}static new_to_stake_creds(t,r){_assertClass(r,MIRToStakeCredentials);var e=wasm.moveinstantaneousreward_new_to_stake_creds(t,r.ptr);return MoveInstantaneousReward.__wrap(e)}pot(){return wasm.moveinstantaneousreward_pot(this.ptr)>>>0}kind(){return wasm.moveinstantaneousreward_kind(this.ptr)>>>0}as_to_other_pot(){var t=wasm.moveinstantaneousreward_as_to_other_pot(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}as_to_stake_creds(){var t=wasm.moveinstantaneousreward_as_to_stake_creds(this.ptr);return 0===t?void 0:MIRToStakeCredentials.__wrap(t)}}export class MoveInstantaneousRewardsCert{static __wrap(t){const r=Object.create(MoveInstantaneousRewardsCert.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_moveinstantaneousrewardscert_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.moveinstantaneousrewardscert_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.moveinstantaneousrewardscert_from_bytes(r,e);return MoveInstantaneousRewardsCert.__wrap(a)}move_instantaneous_reward(){var t=wasm.moveinstantaneousrewardscert_move_instantaneous_reward(this.ptr);return MoveInstantaneousReward.__wrap(t)}static new(t){_assertClass(t,MoveInstantaneousReward);var r=wasm.moveinstantaneousrewardscert_new(t.ptr);return MoveInstantaneousRewardsCert.__wrap(r)}}export class MultiAsset{static __wrap(t){const r=Object.create(MultiAsset.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_multiasset_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.multiasset_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.multiasset_from_bytes(r,e);return MultiAsset.__wrap(a)}static new(){var t=wasm.multiasset_new();return MultiAsset.__wrap(t)}len(){return wasm.multiasset_len(this.ptr)>>>0}insert(t,r){_assertClass(t,ScriptHash),_assertClass(r,Assets);var e=wasm.multiasset_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:Assets.__wrap(e)}get(t){_assertClass(t,ScriptHash);var r=wasm.multiasset_get(this.ptr,t.ptr);return 0===r?void 0:Assets.__wrap(r)}set_asset(t,r,e){_assertClass(t,ScriptHash),_assertClass(r,AssetName),_assertClass(e,BigNum);var a=e.ptr;e.ptr=0;var s=wasm.multiasset_set_asset(this.ptr,t.ptr,r.ptr,a);return 0===s?void 0:BigNum.__wrap(s)}get_asset(t,r){_assertClass(t,ScriptHash),_assertClass(r,AssetName);var e=wasm.multiasset_get_asset(this.ptr,t.ptr,r.ptr);return BigNum.__wrap(e)}keys(){var t=wasm.multiasset_keys(this.ptr);return ScriptHashes.__wrap(t)}sub(t){_assertClass(t,MultiAsset);var r=wasm.multiasset_sub(this.ptr,t.ptr);return MultiAsset.__wrap(r)}}export class MultiHostName{static __wrap(t){const r=Object.create(MultiHostName.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_multihostname_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.multihostname_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.multihostname_from_bytes(r,e);return MultiHostName.__wrap(a)}dns_name(){var t=wasm.multihostname_dns_name(this.ptr);return DNSRecordSRV.__wrap(t)}static new(t){_assertClass(t,DNSRecordSRV);var r=wasm.multihostname_new(t.ptr);return MultiHostName.__wrap(r)}}export class NativeScript{static __wrap(t){const r=Object.create(NativeScript.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_nativescript_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.nativescript_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.nativescript_from_bytes(r,e);return NativeScript.__wrap(a)}hash(t){var r=wasm.nativescript_hash(this.ptr,t);return ScriptHash.__wrap(r)}static new_script_pubkey(t){_assertClass(t,ScriptPubkey);var r=wasm.nativescript_new_script_pubkey(t.ptr);return NativeScript.__wrap(r)}static new_script_all(t){_assertClass(t,ScriptAll);var r=wasm.nativescript_new_script_all(t.ptr);return NativeScript.__wrap(r)}static new_script_any(t){_assertClass(t,ScriptAny);var r=wasm.nativescript_new_script_any(t.ptr);return NativeScript.__wrap(r)}static new_script_n_of_k(t){_assertClass(t,ScriptNOfK);var r=wasm.nativescript_new_script_n_of_k(t.ptr);return NativeScript.__wrap(r)}static new_timelock_start(t){_assertClass(t,TimelockStart);var r=wasm.nativescript_new_timelock_start(t.ptr);return NativeScript.__wrap(r)}static new_timelock_expiry(t){_assertClass(t,TimelockExpiry);var r=wasm.nativescript_new_timelock_expiry(t.ptr);return NativeScript.__wrap(r)}kind(){return wasm.nativescript_kind(this.ptr)>>>0}as_script_pubkey(){var t=wasm.nativescript_as_script_pubkey(this.ptr);return 0===t?void 0:ScriptPubkey.__wrap(t)}as_script_all(){var t=wasm.nativescript_as_script_all(this.ptr);return 0===t?void 0:ScriptAll.__wrap(t)}as_script_any(){var t=wasm.nativescript_as_script_any(this.ptr);return 0===t?void 0:ScriptAny.__wrap(t)}as_script_n_of_k(){var t=wasm.nativescript_as_script_n_of_k(this.ptr);return 0===t?void 0:ScriptNOfK.__wrap(t)}as_timelock_start(){var t=wasm.nativescript_as_timelock_start(this.ptr);return 0===t?void 0:TimelockStart.__wrap(t)}as_timelock_expiry(){var t=wasm.nativescript_as_timelock_expiry(this.ptr);return 0===t?void 0:TimelockExpiry.__wrap(t)}get_required_signers(){var t=wasm.nativescript_get_required_signers(this.ptr);return Ed25519KeyHashes.__wrap(t)}}export class NativeScripts{static __wrap(t){const r=Object.create(NativeScripts.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_nativescripts_free(t)}static new(){var t=wasm.nativescripts_new();return NativeScripts.__wrap(t)}len(){return wasm.nativescripts_len(this.ptr)>>>0}get(t){var r=wasm.nativescripts_get(this.ptr,t);return NativeScript.__wrap(r)}add(t){_assertClass(t,NativeScript),wasm.nativescripts_add(this.ptr,t.ptr)}}export class NetworkId{static __wrap(t){const r=Object.create(NetworkId.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_networkid_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.networkid_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.networkid_from_bytes(r,e);return NetworkId.__wrap(a)}static testnet(){var t=wasm.networkid_testnet();return NetworkId.__wrap(t)}static mainnet(){var t=wasm.networkid_mainnet();return NetworkId.__wrap(t)}kind(){return wasm.networkid_kind(this.ptr)>>>0}}export class NetworkInfo{static __wrap(t){const r=Object.create(NetworkInfo.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_networkinfo_free(t)}static new(t,r){var e=wasm.networkinfo_new(t,r);return NetworkInfo.__wrap(e)}network_id(){return wasm.networkinfo_network_id(this.ptr)}protocol_magic(){return wasm.networkinfo_protocol_magic(this.ptr)>>>0}static testnet(){var t=wasm.networkinfo_testnet();return NetworkInfo.__wrap(t)}static mainnet(){var t=wasm.networkinfo_mainnet();return NetworkInfo.__wrap(t)}}export class Nonce{static __wrap(t){const r=Object.create(Nonce.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_nonce_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.nonce_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.nonce_from_bytes(r,e);return Nonce.__wrap(a)}static new_identity(){var t=wasm.nonce_new_identity();return Nonce.__wrap(t)}static new_from_hash(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.nonce_new_from_hash(r,e);return Nonce.__wrap(a)}get_hash(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.nonce_get_hash(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];let a;return 0!==t&&(a=getArrayU8FromWasm0(t,r).slice(),wasm.__wbindgen_free(t,1*r)),a}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class OperationalCert{static __wrap(t){const r=Object.create(OperationalCert.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_operationalcert_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.operationalcert_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.operationalcert_from_bytes(r,e);return OperationalCert.__wrap(a)}hot_vkey(){var t=wasm.operationalcert_hot_vkey(this.ptr);return KESVKey.__wrap(t)}sequence_number(){return wasm.operationalcert_sequence_number(this.ptr)>>>0}kes_period(){return wasm.operationalcert_kes_period(this.ptr)>>>0}sigma(){var t=wasm.operationalcert_sigma(this.ptr);return Ed25519Signature.__wrap(t)}static new(t,r,e,a){_assertClass(t,KESVKey),_assertClass(a,Ed25519Signature);var s=wasm.operationalcert_new(t.ptr,r,e,a.ptr);return OperationalCert.__wrap(s)}}export class PlutusData{static __wrap(t){const r=Object.create(PlutusData.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_plutusdata_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutusdata_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutusdata_from_bytes(r,e);return PlutusData.__wrap(a)}static new_constr_plutus_data(t){_assertClass(t,ConstrPlutusData);var r=wasm.plutusdata_new_constr_plutus_data(t.ptr);return PlutusData.__wrap(r)}static new_map(t){_assertClass(t,PlutusMap);var r=wasm.plutusdata_new_map(t.ptr);return PlutusData.__wrap(r)}static new_list(t){_assertClass(t,PlutusList);var r=wasm.plutusdata_new_list(t.ptr);return PlutusData.__wrap(r)}static new_integer(t){_assertClass(t,BigInt);var r=wasm.plutusdata_new_integer(t.ptr);return PlutusData.__wrap(r)}static new_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutusdata_new_bytes(r,e);return PlutusData.__wrap(a)}kind(){return wasm.plutusdata_kind(this.ptr)>>>0}as_constr_plutus_data(){var t=wasm.plutusdata_as_constr_plutus_data(this.ptr);return 0===t?void 0:ConstrPlutusData.__wrap(t)}as_map(){var t=wasm.plutusdata_as_map(this.ptr);return 0===t?void 0:PlutusMap.__wrap(t)}as_list(){var t=wasm.plutusdata_as_list(this.ptr);return 0===t?void 0:PlutusList.__wrap(t)}as_integer(){var t=wasm.plutusdata_as_integer(this.ptr);return 0===t?void 0:BigInt.__wrap(t)}as_bytes(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutusdata_as_bytes(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];let a;return 0!==t&&(a=getArrayU8FromWasm0(t,r).slice(),wasm.__wbindgen_free(t,1*r)),a}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class PlutusList{static __wrap(t){const r=Object.create(PlutusList.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_plutuslist_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutuslist_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutuslist_from_bytes(r,e);return PlutusList.__wrap(a)}static new(){var t=wasm.plutuslist_new();return PlutusList.__wrap(t)}len(){return wasm.plutuslist_len(this.ptr)>>>0}get(t){var r=wasm.plutuslist_get(this.ptr,t);return PlutusData.__wrap(r)}add(t){_assertClass(t,PlutusData),wasm.plutuslist_add(this.ptr,t.ptr)}}export class PlutusMap{static __wrap(t){const r=Object.create(PlutusMap.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_plutusmap_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutusmap_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutusmap_from_bytes(r,e);return PlutusMap.__wrap(a)}static new(){var t=wasm.plutusmap_new();return PlutusMap.__wrap(t)}len(){return wasm.plutusmap_len(this.ptr)>>>0}insert(t,r){_assertClass(t,PlutusData),_assertClass(r,PlutusData);var e=wasm.plutusmap_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:PlutusData.__wrap(e)}get(t){_assertClass(t,PlutusData);var r=wasm.plutusmap_get(this.ptr,t.ptr);return 0===r?void 0:PlutusData.__wrap(r)}keys(){var t=wasm.plutusmap_keys(this.ptr);return PlutusList.__wrap(t)}}export class PlutusScript{static __wrap(t){const r=Object.create(PlutusScript.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_plutusscript_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutusscript_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutusscript_from_bytes(r,e);return PlutusScript.__wrap(a)}static new(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutusscript_new(r,e);return PlutusScript.__wrap(a)}bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutusscript_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}}export class PlutusScripts{static __wrap(t){const r=Object.create(PlutusScripts.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_plutusscripts_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.plutusscripts_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.plutusscripts_from_bytes(r,e);return PlutusScripts.__wrap(a)}static new(){var t=wasm.plutusscripts_new();return PlutusScripts.__wrap(t)}len(){return wasm.plutusscripts_len(this.ptr)>>>0}get(t){var r=wasm.plutusscripts_get(this.ptr,t);return PlutusScript.__wrap(r)}add(t){_assertClass(t,PlutusScript),wasm.plutusscripts_add(this.ptr,t.ptr)}}export class Pointer{static __wrap(t){const r=Object.create(Pointer.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_pointer_free(t)}static new(t,r,e){var a=wasm.pointer_new(t,r,e);return Pointer.__wrap(a)}slot(){return wasm.pointer_slot(this.ptr)>>>0}tx_index(){return wasm.pointer_tx_index(this.ptr)>>>0}cert_index(){return wasm.pointer_cert_index(this.ptr)>>>0}}export class PointerAddress{static __wrap(t){const r=Object.create(PointerAddress.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_pointeraddress_free(t)}static new(t,r,e){_assertClass(r,StakeCredential),_assertClass(e,Pointer);var a=wasm.pointeraddress_new(t,r.ptr,e.ptr);return PointerAddress.__wrap(a)}payment_cred(){var t=wasm.pointeraddress_payment_cred(this.ptr);return StakeCredential.__wrap(t)}stake_pointer(){var t=wasm.pointeraddress_stake_pointer(this.ptr);return Pointer.__wrap(t)}to_address(){var t=wasm.pointeraddress_to_address(this.ptr);return Address.__wrap(t)}static from_address(t){_assertClass(t,Address);var r=wasm.pointeraddress_from_address(t.ptr);return 0===r?void 0:PointerAddress.__wrap(r)}}export class PoolMetadata{static __wrap(t){const r=Object.create(PoolMetadata.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_poolmetadata_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.poolmetadata_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.poolmetadata_from_bytes(r,e);return PoolMetadata.__wrap(a)}url(){var t=wasm.poolmetadata_url(this.ptr);return URL.__wrap(t)}pool_metadata_hash(){var t=wasm.poolmetadata_pool_metadata_hash(this.ptr);return PoolMetadataHash.__wrap(t)}static new(t,r){_assertClass(t,URL),_assertClass(r,PoolMetadataHash);var e=wasm.poolmetadata_new(t.ptr,r.ptr);return PoolMetadata.__wrap(e)}}export class PoolMetadataHash{static __wrap(t){const r=Object.create(PoolMetadataHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_poolmetadatahash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.poolmetadatahash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.poolmetadatahash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.poolmetadatahash_from_bech32(r,e);return PoolMetadataHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.poolmetadatahash_from_bytes(r,e);return PoolMetadataHash.__wrap(a)}}export class PoolParams{static __wrap(t){const r=Object.create(PoolParams.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_poolparams_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.poolparams_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.poolparams_from_bytes(r,e);return PoolParams.__wrap(a)}operator(){var t=wasm.poolparams_operator(this.ptr);return Ed25519KeyHash.__wrap(t)}vrf_keyhash(){var t=wasm.poolparams_vrf_keyhash(this.ptr);return VRFKeyHash.__wrap(t)}pledge(){var t=wasm.poolparams_pledge(this.ptr);return BigNum.__wrap(t)}cost(){var t=wasm.poolparams_cost(this.ptr);return BigNum.__wrap(t)}margin(){var t=wasm.poolparams_margin(this.ptr);return UnitInterval.__wrap(t)}reward_account(){var t=wasm.poolparams_reward_account(this.ptr);return RewardAddress.__wrap(t)}pool_owners(){var t=wasm.poolparams_pool_owners(this.ptr);return Ed25519KeyHashes.__wrap(t)}relays(){var t=wasm.poolparams_relays(this.ptr);return Relays.__wrap(t)}pool_metadata(){var t=wasm.poolparams_pool_metadata(this.ptr);return 0===t?void 0:PoolMetadata.__wrap(t)}static new(t,r,e,a,s,_,n,o,i){_assertClass(t,Ed25519KeyHash),_assertClass(r,VRFKeyHash),_assertClass(e,BigNum),_assertClass(a,BigNum),_assertClass(s,UnitInterval),_assertClass(_,RewardAddress),_assertClass(n,Ed25519KeyHashes),_assertClass(o,Relays);let p=0;isLikeNone(i)||(_assertClass(i,PoolMetadata),p=i.ptr,i.ptr=0);var w=wasm.poolparams_new(t.ptr,r.ptr,e.ptr,a.ptr,s.ptr,_.ptr,n.ptr,o.ptr,p);return PoolParams.__wrap(w)}}export class PoolRegistration{static __wrap(t){const r=Object.create(PoolRegistration.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_poolregistration_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.poolregistration_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.poolregistration_from_bytes(r,e);return PoolRegistration.__wrap(a)}pool_params(){var t=wasm.poolregistration_pool_params(this.ptr);return PoolParams.__wrap(t)}static new(t){_assertClass(t,PoolParams);var r=wasm.poolregistration_new(t.ptr);return PoolRegistration.__wrap(r)}}export class PoolRetirement{static __wrap(t){const r=Object.create(PoolRetirement.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_poolretirement_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.poolretirement_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.poolretirement_from_bytes(r,e);return PoolRetirement.__wrap(a)}pool_keyhash(){var t=wasm.poolretirement_pool_keyhash(this.ptr);return Ed25519KeyHash.__wrap(t)}epoch(){return wasm.poolretirement_epoch(this.ptr)>>>0}static new(t,r){_assertClass(t,Ed25519KeyHash);var e=wasm.poolretirement_new(t.ptr,r);return PoolRetirement.__wrap(e)}}export class PrivateKey{static __wrap(t){const r=Object.create(PrivateKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_privatekey_free(t)}to_public(){var t=wasm.privatekey_to_public(this.ptr);return PublicKey.__wrap(t)}static generate_ed25519(){var t=wasm.privatekey_generate_ed25519();return PrivateKey.__wrap(t)}static generate_ed25519extended(){var t=wasm.privatekey_generate_ed25519extended();return PrivateKey.__wrap(t)}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.privatekey_from_bech32(r,e);return PrivateKey.__wrap(a)}to_bech32(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.privatekey_to_bech32(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}as_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.privatekey_as_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_extended_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.privatekey_from_extended_bytes(r,e);return PrivateKey.__wrap(a)}static from_normal_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.privatekey_from_normal_bytes(r,e);return PrivateKey.__wrap(a)}sign(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.privatekey_sign(this.ptr,r,e);return Ed25519Signature.__wrap(a)}}export class ProposedProtocolParameterUpdates{static __wrap(t){const r=Object.create(ProposedProtocolParameterUpdates.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_proposedprotocolparameterupdates_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.proposedprotocolparameterupdates_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.proposedprotocolparameterupdates_from_bytes(r,e);return ProposedProtocolParameterUpdates.__wrap(a)}static new(){var t=wasm.proposedprotocolparameterupdates_new();return ProposedProtocolParameterUpdates.__wrap(t)}len(){return wasm.proposedprotocolparameterupdates_len(this.ptr)>>>0}insert(t,r){_assertClass(t,GenesisHash),_assertClass(r,ProtocolParamUpdate);var e=wasm.proposedprotocolparameterupdates_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:ProtocolParamUpdate.__wrap(e)}get(t){_assertClass(t,GenesisHash);var r=wasm.proposedprotocolparameterupdates_get(this.ptr,t.ptr);return 0===r?void 0:ProtocolParamUpdate.__wrap(r)}keys(){var t=wasm.proposedprotocolparameterupdates_keys(this.ptr);return GenesisHashes.__wrap(t)}}export class ProtocolParamUpdate{static __wrap(t){const r=Object.create(ProtocolParamUpdate.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_protocolparamupdate_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.protocolparamupdate_from_bytes(r,e);return ProtocolParamUpdate.__wrap(a)}set_minfee_a(t){_assertClass(t,BigNum),wasm.protocolparamupdate_set_minfee_a(this.ptr,t.ptr)}minfee_a(){var t=wasm.protocolparamupdate_minfee_a(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}set_minfee_b(t){_assertClass(t,BigNum),wasm.protocolparamupdate_set_minfee_b(this.ptr,t.ptr)}minfee_b(){var t=wasm.protocolparamupdate_minfee_b(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}set_max_block_body_size(t){wasm.protocolparamupdate_set_max_block_body_size(this.ptr,t)}max_block_body_size(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_max_block_body_size(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_max_tx_size(t){wasm.protocolparamupdate_set_max_tx_size(this.ptr,t)}max_tx_size(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_max_tx_size(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_max_block_header_size(t){wasm.protocolparamupdate_set_max_block_header_size(this.ptr,t)}max_block_header_size(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_max_block_header_size(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_key_deposit(t){_assertClass(t,BigNum),wasm.protocolparamupdate_set_key_deposit(this.ptr,t.ptr)}key_deposit(){var t=wasm.protocolparamupdate_key_deposit(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}set_pool_deposit(t){_assertClass(t,BigNum),wasm.protocolparamupdate_set_pool_deposit(this.ptr,t.ptr)}pool_deposit(){var t=wasm.protocolparamupdate_pool_deposit(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}set_max_epoch(t){wasm.protocolparamupdate_set_max_epoch(this.ptr,t)}max_epoch(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_max_epoch(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_n_opt(t){wasm.protocolparamupdate_set_n_opt(this.ptr,t)}n_opt(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_n_opt(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_pool_pledge_influence(t){_assertClass(t,UnitInterval),wasm.protocolparamupdate_set_pool_pledge_influence(this.ptr,t.ptr)}pool_pledge_influence(){var t=wasm.protocolparamupdate_pool_pledge_influence(this.ptr);return 0===t?void 0:UnitInterval.__wrap(t)}set_expansion_rate(t){_assertClass(t,UnitInterval),wasm.protocolparamupdate_set_expansion_rate(this.ptr,t.ptr)}expansion_rate(){var t=wasm.protocolparamupdate_expansion_rate(this.ptr);return 0===t?void 0:UnitInterval.__wrap(t)}set_treasury_growth_rate(t){_assertClass(t,UnitInterval),wasm.protocolparamupdate_set_treasury_growth_rate(this.ptr,t.ptr)}treasury_growth_rate(){var t=wasm.protocolparamupdate_treasury_growth_rate(this.ptr);return 0===t?void 0:UnitInterval.__wrap(t)}set_d(t){_assertClass(t,UnitInterval),wasm.protocolparamupdate_set_d(this.ptr,t.ptr)}d(){var t=wasm.protocolparamupdate_d(this.ptr);return 0===t?void 0:UnitInterval.__wrap(t)}set_extra_entropy(t){_assertClass(t,Nonce),wasm.protocolparamupdate_set_extra_entropy(this.ptr,t.ptr)}extra_entropy(){var t=wasm.protocolparamupdate_extra_entropy(this.ptr);return 0===t?void 0:Nonce.__wrap(t)}set_protocol_version(t){_assertClass(t,ProtocolVersions),wasm.protocolparamupdate_set_protocol_version(this.ptr,t.ptr)}protocol_version(){var t=wasm.protocolparamupdate_protocol_version(this.ptr);return 0===t?void 0:ProtocolVersions.__wrap(t)}set_min_pool_cost(t){_assertClass(t,BigNum),wasm.protocolparamupdate_set_min_pool_cost(this.ptr,t.ptr)}min_pool_cost(){var t=wasm.protocolparamupdate_min_pool_cost(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}set_ada_per_utxo_byte(t){_assertClass(t,BigNum),wasm.protocolparamupdate_set_ada_per_utxo_byte(this.ptr,t.ptr)}ada_per_utxo_byte(){var t=wasm.protocolparamupdate_ada_per_utxo_byte(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}set_cost_models(t){_assertClass(t,Costmdls),wasm.protocolparamupdate_set_cost_models(this.ptr,t.ptr)}cost_models(){var t=wasm.protocolparamupdate_cost_models(this.ptr);return 0===t?void 0:Costmdls.__wrap(t)}set_execution_costs(t){_assertClass(t,ExUnitPrices),wasm.protocolparamupdate_set_execution_costs(this.ptr,t.ptr)}execution_costs(){var t=wasm.protocolparamupdate_execution_costs(this.ptr);return 0===t?void 0:ExUnitPrices.__wrap(t)}set_max_tx_ex_units(t){_assertClass(t,ExUnits),wasm.protocolparamupdate_set_max_tx_ex_units(this.ptr,t.ptr)}max_tx_ex_units(){var t=wasm.protocolparamupdate_max_tx_ex_units(this.ptr);return 0===t?void 0:ExUnits.__wrap(t)}set_max_block_ex_units(t){_assertClass(t,ExUnits),wasm.protocolparamupdate_set_max_block_ex_units(this.ptr,t.ptr)}max_block_ex_units(){var t=wasm.protocolparamupdate_max_block_ex_units(this.ptr);return 0===t?void 0:ExUnits.__wrap(t)}set_max_value_size(t){wasm.protocolparamupdate_set_max_value_size(this.ptr,t)}max_value_size(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_max_value_size(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_collateral_percentage(t){wasm.protocolparamupdate_set_collateral_percentage(this.ptr,t)}collateral_percentage(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_collateral_percentage(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_max_collateral_inputs(t){wasm.protocolparamupdate_set_max_collateral_inputs(this.ptr,t)}max_collateral_inputs(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolparamupdate_max_collateral_inputs(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static new(){var t=wasm.protocolparamupdate_new();return ProtocolParamUpdate.__wrap(t)}}export class ProtocolVersion{static __wrap(t){const r=Object.create(ProtocolVersion.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_protocolversion_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolversion_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.protocolversion_from_bytes(r,e);return ProtocolVersion.__wrap(a)}major(){return wasm.protocolversion_major(this.ptr)>>>0}minor(){return wasm.protocolversion_minor(this.ptr)>>>0}static new(t,r){var e=wasm.protocolversion_new(t,r);return ProtocolVersion.__wrap(e)}}export class ProtocolVersions{static __wrap(t){const r=Object.create(ProtocolVersions.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_protocolversions_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.protocolversions_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.protocolversions_from_bytes(r,e);return ProtocolVersions.__wrap(a)}static new(){var t=wasm.protocolversions_new();return ProtocolVersions.__wrap(t)}len(){return wasm.protocolversions_len(this.ptr)>>>0}get(t){var r=wasm.protocolversions_get(this.ptr,t);return ProtocolVersion.__wrap(r)}add(t){_assertClass(t,ProtocolVersion),wasm.protocolversions_add(this.ptr,t.ptr)}}export class PublicKey{static __wrap(t){const r=Object.create(PublicKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_publickey_free(t)}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.publickey_from_bech32(r,e);return PublicKey.__wrap(a)}to_bech32(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.publickey_to_bech32(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}as_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.publickey_as_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.publickey_from_bytes(r,e);return PublicKey.__wrap(a)}verify(t,r){var e=passArray8ToWasm0(t,wasm.__wbindgen_malloc),a=WASM_VECTOR_LEN;return _assertClass(r,Ed25519Signature),0!==wasm.publickey_verify(this.ptr,e,a,r.ptr)}hash(){var t=wasm.publickey_hash(this.ptr);return Ed25519KeyHash.__wrap(t)}}export class PublicKeys{static __wrap(t){const r=Object.create(PublicKeys.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_publickeys_free(t)}constructor(){var t=wasm.publickeys_new();return PublicKeys.__wrap(t)}size(){return wasm.publickeys_size(this.ptr)>>>0}get(t){var r=wasm.publickeys_get(this.ptr,t);return PublicKey.__wrap(r)}add(t){_assertClass(t,PublicKey),wasm.publickeys_add(this.ptr,t.ptr)}}export class Redeemer{static __wrap(t){const r=Object.create(Redeemer.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_redeemer_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.redeemer_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.redeemer_from_bytes(r,e);return Redeemer.__wrap(a)}tag(){var t=wasm.redeemer_tag(this.ptr);return RedeemerTag.__wrap(t)}index(){var t=wasm.redeemer_index(this.ptr);return BigNum.__wrap(t)}data(){var t=wasm.redeemer_data(this.ptr);return PlutusData.__wrap(t)}ex_units(){var t=wasm.redeemer_ex_units(this.ptr);return ExUnits.__wrap(t)}static new(t,r,e,a){_assertClass(t,RedeemerTag),_assertClass(r,BigNum),_assertClass(e,PlutusData),_assertClass(a,ExUnits);var s=wasm.redeemer_new(t.ptr,r.ptr,e.ptr,a.ptr);return Redeemer.__wrap(s)}}export class RedeemerTag{static __wrap(t){const r=Object.create(RedeemerTag.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_redeemertag_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.redeemertag_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.redeemertag_from_bytes(r,e);return RedeemerTag.__wrap(a)}static new_spend(){var t=wasm.redeemertag_new_spend();return RedeemerTag.__wrap(t)}static new_mint(){var t=wasm.redeemertag_new_mint();return RedeemerTag.__wrap(t)}static new_cert(){var t=wasm.redeemertag_new_cert();return RedeemerTag.__wrap(t)}static new_reward(){var t=wasm.redeemertag_new_reward();return RedeemerTag.__wrap(t)}kind(){return wasm.redeemertag_kind(this.ptr)>>>0}}export class Redeemers{static __wrap(t){const r=Object.create(Redeemers.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_redeemers_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.redeemers_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.redeemers_from_bytes(r,e);return Redeemers.__wrap(a)}static new(){var t=wasm.redeemers_new();return Redeemers.__wrap(t)}len(){return wasm.redeemers_len(this.ptr)>>>0}get(t){var r=wasm.redeemers_get(this.ptr,t);return Redeemer.__wrap(r)}add(t){_assertClass(t,Redeemer),wasm.redeemers_add(this.ptr,t.ptr)}}export class Relay{static __wrap(t){const r=Object.create(Relay.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_relay_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.relay_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.relay_from_bytes(r,e);return Relay.__wrap(a)}static new_single_host_addr(t){_assertClass(t,SingleHostAddr);var r=wasm.relay_new_single_host_addr(t.ptr);return Relay.__wrap(r)}static new_single_host_name(t){_assertClass(t,SingleHostName);var r=wasm.relay_new_single_host_name(t.ptr);return Relay.__wrap(r)}static new_multi_host_name(t){_assertClass(t,MultiHostName);var r=wasm.relay_new_multi_host_name(t.ptr);return Relay.__wrap(r)}kind(){return wasm.relay_kind(this.ptr)>>>0}as_single_host_addr(){var t=wasm.relay_as_single_host_addr(this.ptr);return 0===t?void 0:SingleHostAddr.__wrap(t)}as_single_host_name(){var t=wasm.relay_as_single_host_name(this.ptr);return 0===t?void 0:SingleHostName.__wrap(t)}as_multi_host_name(){var t=wasm.relay_as_multi_host_name(this.ptr);return 0===t?void 0:MultiHostName.__wrap(t)}}export class Relays{static __wrap(t){const r=Object.create(Relays.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_relays_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.relays_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.relays_from_bytes(r,e);return Relays.__wrap(a)}static new(){var t=wasm.relays_new();return Relays.__wrap(t)}len(){return wasm.relays_len(this.ptr)>>>0}get(t){var r=wasm.relays_get(this.ptr,t);return Relay.__wrap(r)}add(t){_assertClass(t,Relay),wasm.relays_add(this.ptr,t.ptr)}}export class RewardAddress{static __wrap(t){const r=Object.create(RewardAddress.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_rewardaddress_free(t)}static new(t,r){_assertClass(r,StakeCredential);var e=wasm.rewardaddress_new(t,r.ptr);return RewardAddress.__wrap(e)}payment_cred(){var t=wasm.rewardaddress_payment_cred(this.ptr);return StakeCredential.__wrap(t)}to_address(){var t=wasm.rewardaddress_to_address(this.ptr);return Address.__wrap(t)}static from_address(t){_assertClass(t,Address);var r=wasm.rewardaddress_from_address(t.ptr);return 0===r?void 0:RewardAddress.__wrap(r)}}export class RewardAddresses{static __wrap(t){const r=Object.create(RewardAddresses.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_rewardaddresses_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.rewardaddresses_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.rewardaddresses_from_bytes(r,e);return RewardAddresses.__wrap(a)}static new(){var t=wasm.rewardaddresses_new();return RewardAddresses.__wrap(t)}len(){return wasm.rewardaddresses_len(this.ptr)>>>0}get(t){var r=wasm.rewardaddresses_get(this.ptr,t);return RewardAddress.__wrap(r)}add(t){_assertClass(t,RewardAddress),wasm.rewardaddresses_add(this.ptr,t.ptr)}}export class ScriptAll{static __wrap(t){const r=Object.create(ScriptAll.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scriptall_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scriptall_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scriptall_from_bytes(r,e);return ScriptAll.__wrap(a)}native_scripts(){var t=wasm.scriptall_native_scripts(this.ptr);return NativeScripts.__wrap(t)}static new(t){_assertClass(t,NativeScripts);var r=wasm.scriptall_new(t.ptr);return ScriptAll.__wrap(r)}}export class ScriptAny{static __wrap(t){const r=Object.create(ScriptAny.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scriptany_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scriptany_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scriptany_from_bytes(r,e);return ScriptAny.__wrap(a)}native_scripts(){var t=wasm.scriptany_native_scripts(this.ptr);return NativeScripts.__wrap(t)}static new(t){_assertClass(t,NativeScripts);var r=wasm.scriptany_new(t.ptr);return ScriptAny.__wrap(r)}}export class ScriptDataHash{static __wrap(t){const r=Object.create(ScriptDataHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scriptdatahash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scriptdatahash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.scriptdatahash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.scriptdatahash_from_bech32(r,e);return ScriptDataHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scriptdatahash_from_bytes(r,e);return ScriptDataHash.__wrap(a)}}export class ScriptHash{static __wrap(t){const r=Object.create(ScriptHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scripthash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scripthash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.scripthash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.scripthash_from_bech32(r,e);return ScriptHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scripthash_from_bytes(r,e);return ScriptHash.__wrap(a)}}export class ScriptHashes{static __wrap(t){const r=Object.create(ScriptHashes.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scripthashes_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scripthashes_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scripthashes_from_bytes(r,e);return ScriptHashes.__wrap(a)}static new(){var t=wasm.scripthashes_new();return ScriptHashes.__wrap(t)}len(){return wasm.scripthashes_len(this.ptr)>>>0}get(t){var r=wasm.scripthashes_get(this.ptr,t);return ScriptHash.__wrap(r)}add(t){_assertClass(t,ScriptHash),wasm.scripthashes_add(this.ptr,t.ptr)}}export class ScriptNOfK{static __wrap(t){const r=Object.create(ScriptNOfK.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scriptnofk_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scriptnofk_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scriptnofk_from_bytes(r,e);return ScriptNOfK.__wrap(a)}n(){return wasm.scriptnofk_n(this.ptr)>>>0}native_scripts(){var t=wasm.scriptnofk_native_scripts(this.ptr);return NativeScripts.__wrap(t)}static new(t,r){_assertClass(r,NativeScripts);var e=wasm.scriptnofk_new(t,r.ptr);return ScriptNOfK.__wrap(e)}}export class ScriptPubkey{static __wrap(t){const r=Object.create(ScriptPubkey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_scriptpubkey_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.scriptpubkey_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.scriptpubkey_from_bytes(r,e);return ScriptPubkey.__wrap(a)}addr_keyhash(){var t=wasm.scriptpubkey_addr_keyhash(this.ptr);return Ed25519KeyHash.__wrap(t)}static new(t){_assertClass(t,Ed25519KeyHash);var r=wasm.scriptpubkey_new(t.ptr);return ScriptPubkey.__wrap(r)}}export class SingleHostAddr{static __wrap(t){const r=Object.create(SingleHostAddr.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_singlehostaddr_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.singlehostaddr_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.singlehostaddr_from_bytes(r,e);return SingleHostAddr.__wrap(a)}port(){var t=wasm.singlehostaddr_port(this.ptr);return 16777215===t?void 0:t}ipv4(){var t=wasm.singlehostaddr_ipv4(this.ptr);return 0===t?void 0:Ipv4.__wrap(t)}ipv6(){var t=wasm.singlehostaddr_ipv6(this.ptr);return 0===t?void 0:Ipv6.__wrap(t)}static new(t,r,e){let a=0;isLikeNone(r)||(_assertClass(r,Ipv4),a=r.ptr,r.ptr=0);let s=0;isLikeNone(e)||(_assertClass(e,Ipv6),s=e.ptr,e.ptr=0);var _=wasm.singlehostaddr_new(isLikeNone(t)?16777215:t,a,s);return SingleHostAddr.__wrap(_)}}export class SingleHostName{static __wrap(t){const r=Object.create(SingleHostName.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_singlehostname_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.singlehostname_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.singlehostname_from_bytes(r,e);return SingleHostName.__wrap(a)}port(){var t=wasm.singlehostname_port(this.ptr);return 16777215===t?void 0:t}dns_name(){var t=wasm.singlehostname_dns_name(this.ptr);return DNSRecordAorAAAA.__wrap(t)}static new(t,r){_assertClass(r,DNSRecordAorAAAA);var e=wasm.singlehostname_new(isLikeNone(t)?16777215:t,r.ptr);return SingleHostName.__wrap(e)}}export class StakeCredential{static __wrap(t){const r=Object.create(StakeCredential.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_stakecredential_free(t)}static from_keyhash(t){_assertClass(t,Ed25519KeyHash);var r=wasm.stakecredential_from_keyhash(t.ptr);return StakeCredential.__wrap(r)}static from_scripthash(t){_assertClass(t,ScriptHash);var r=wasm.stakecredential_from_scripthash(t.ptr);return StakeCredential.__wrap(r)}to_keyhash(){var t=wasm.stakecredential_to_keyhash(this.ptr);return 0===t?void 0:Ed25519KeyHash.__wrap(t)}to_scripthash(){var t=wasm.stakecredential_to_scripthash(this.ptr);return 0===t?void 0:ScriptHash.__wrap(t)}kind(){return wasm.stakecredential_kind(this.ptr)>>>0}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.stakecredential_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.stakecredential_from_bytes(r,e);return StakeCredential.__wrap(a)}}export class StakeCredentials{static __wrap(t){const r=Object.create(StakeCredentials.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_stakecredentials_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.stakecredentials_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.stakecredentials_from_bytes(r,e);return StakeCredentials.__wrap(a)}static new(){var t=wasm.stakecredentials_new();return StakeCredentials.__wrap(t)}len(){return wasm.stakecredentials_len(this.ptr)>>>0}get(t){var r=wasm.stakecredentials_get(this.ptr,t);return StakeCredential.__wrap(r)}add(t){_assertClass(t,StakeCredential),wasm.stakecredentials_add(this.ptr,t.ptr)}}export class StakeDelegation{static __wrap(t){const r=Object.create(StakeDelegation.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_stakedelegation_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.stakedelegation_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.stakedelegation_from_bytes(r,e);return StakeDelegation.__wrap(a)}stake_credential(){var t=wasm.stakedelegation_stake_credential(this.ptr);return StakeCredential.__wrap(t)}pool_keyhash(){var t=wasm.stakedelegation_pool_keyhash(this.ptr);return Ed25519KeyHash.__wrap(t)}static new(t,r){_assertClass(t,StakeCredential),_assertClass(r,Ed25519KeyHash);var e=wasm.stakedelegation_new(t.ptr,r.ptr);return StakeDelegation.__wrap(e)}}export class StakeDeregistration{static __wrap(t){const r=Object.create(StakeDeregistration.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_stakederegistration_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.stakederegistration_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.stakederegistration_from_bytes(r,e);return StakeDeregistration.__wrap(a)}stake_credential(){var t=wasm.stakederegistration_stake_credential(this.ptr);return StakeCredential.__wrap(t)}static new(t){_assertClass(t,StakeCredential);var r=wasm.stakederegistration_new(t.ptr);return StakeDeregistration.__wrap(r)}}export class StakeRegistration{static __wrap(t){const r=Object.create(StakeRegistration.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_stakeregistration_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.stakeregistration_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.stakeregistration_from_bytes(r,e);return StakeRegistration.__wrap(a)}stake_credential(){var t=wasm.stakeregistration_stake_credential(this.ptr);return StakeCredential.__wrap(t)}static new(t){_assertClass(t,StakeCredential);var r=wasm.stakeregistration_new(t.ptr);return StakeRegistration.__wrap(r)}}export class Strings{static __wrap(t){const r=Object.create(Strings.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_strings_free(t)}static new(){var t=wasm.strings_new();return Strings.__wrap(t)}len(){return wasm.strings_len(this.ptr)>>>0}get(t){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.strings_get(a,this.ptr,t);var r=getInt32Memory0()[a/4+0],e=getInt32Memory0()[a/4+1];return getStringFromWasm0(r,e)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(r,e)}}add(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.strings_add(this.ptr,r,e)}}export class TimelockExpiry{static __wrap(t){const r=Object.create(TimelockExpiry.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_timelockexpiry_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.timelockexpiry_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.timelockexpiry_from_bytes(r,e);return TimelockExpiry.__wrap(a)}slot(){return wasm.timelockexpiry_slot(this.ptr)>>>0}static new(t){var r=wasm.timelockexpiry_new(t);return TimelockExpiry.__wrap(r)}}export class TimelockStart{static __wrap(t){const r=Object.create(TimelockStart.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_timelockstart_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.timelockstart_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.timelockstart_from_bytes(r,e);return TimelockStart.__wrap(a)}slot(){return wasm.timelockstart_slot(this.ptr)>>>0}static new(t){var r=wasm.timelockstart_new(t);return TimelockStart.__wrap(r)}}export class Transaction{static __wrap(t){const r=Object.create(Transaction.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transaction_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transaction_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transaction_from_bytes(r,e);return Transaction.__wrap(a)}body(){var t=wasm.transaction_body(this.ptr);return TransactionBody.__wrap(t)}witness_set(){var t=wasm.transaction_witness_set(this.ptr);return TransactionWitnessSet.__wrap(t)}is_valid(){return 0!==wasm.transaction_is_valid(this.ptr)}auxiliary_data(){var t=wasm.transaction_auxiliary_data(this.ptr);return 0===t?void 0:AuxiliaryData.__wrap(t)}set_is_valid(t){wasm.transaction_set_is_valid(this.ptr,t)}static new(t,r,e){_assertClass(t,TransactionBody),_assertClass(r,TransactionWitnessSet);let a=0;isLikeNone(e)||(_assertClass(e,AuxiliaryData),a=e.ptr,e.ptr=0);var s=wasm.transaction_new(t.ptr,r.ptr,a);return Transaction.__wrap(s)}}export class TransactionBodies{static __wrap(t){const r=Object.create(TransactionBodies.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionbodies_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionbodies_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionbodies_from_bytes(r,e);return TransactionBodies.__wrap(a)}static new(){var t=wasm.transactionbodies_new();return TransactionBodies.__wrap(t)}len(){return wasm.transactionbodies_len(this.ptr)>>>0}get(t){var r=wasm.transactionbodies_get(this.ptr,t);return TransactionBody.__wrap(r)}add(t){_assertClass(t,TransactionBody),wasm.transactionbodies_add(this.ptr,t.ptr)}}export class TransactionBody{static __wrap(t){const r=Object.create(TransactionBody.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionbody_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionbody_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionbody_from_bytes(r,e);return TransactionBody.__wrap(a)}inputs(){var t=wasm.transactionbody_inputs(this.ptr);return TransactionInputs.__wrap(t)}outputs(){var t=wasm.transactionbody_outputs(this.ptr);return TransactionOutputs.__wrap(t)}fee(){var t=wasm.transactionbody_fee(this.ptr);return BigNum.__wrap(t)}ttl(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionbody_ttl(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_certs(t){_assertClass(t,Certificates),wasm.transactionbody_set_certs(this.ptr,t.ptr)}certs(){var t=wasm.transactionbody_certs(this.ptr);return 0===t?void 0:Certificates.__wrap(t)}set_withdrawals(t){_assertClass(t,Withdrawals),wasm.transactionbody_set_withdrawals(this.ptr,t.ptr)}withdrawals(){var t=wasm.transactionbody_withdrawals(this.ptr);return 0===t?void 0:Withdrawals.__wrap(t)}set_update(t){_assertClass(t,Update),wasm.transactionbody_set_update(this.ptr,t.ptr)}update(){var t=wasm.transactionbody_update(this.ptr);return 0===t?void 0:Update.__wrap(t)}set_auxiliary_data_hash(t){_assertClass(t,AuxiliaryDataHash),wasm.transactionbody_set_auxiliary_data_hash(this.ptr,t.ptr)}auxiliary_data_hash(){var t=wasm.transactionbody_auxiliary_data_hash(this.ptr);return 0===t?void 0:AuxiliaryDataHash.__wrap(t)}set_validity_start_interval(t){wasm.transactionbody_set_validity_start_interval(this.ptr,t)}validity_start_interval(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionbody_validity_start_interval(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return 0===t?void 0:r>>>0}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}set_mint(t){_assertClass(t,Mint),wasm.transactionbody_set_mint(this.ptr,t.ptr)}mint(){var t=wasm.transactionbody_mint(this.ptr);return 0===t?void 0:Mint.__wrap(t)}multiassets(){var t=wasm.transactionbody_multiassets(this.ptr);return 0===t?void 0:Mint.__wrap(t)}set_script_data_hash(t){_assertClass(t,ScriptDataHash),wasm.transactionbody_set_script_data_hash(this.ptr,t.ptr)}script_data_hash(){var t=wasm.transactionbody_script_data_hash(this.ptr);return 0===t?void 0:ScriptDataHash.__wrap(t)}set_collateral(t){_assertClass(t,TransactionInputs),wasm.transactionbody_set_collateral(this.ptr,t.ptr)}collateral(){var t=wasm.transactionbody_collateral(this.ptr);return 0===t?void 0:TransactionInputs.__wrap(t)}set_required_signers(t){_assertClass(t,Ed25519KeyHashes),wasm.transactionbody_set_required_signers(this.ptr,t.ptr)}required_signers(){var t=wasm.transactionbody_required_signers(this.ptr);return 0===t?void 0:Ed25519KeyHashes.__wrap(t)}set_network_id(t){_assertClass(t,NetworkId),wasm.transactionbody_set_network_id(this.ptr,t.ptr)}network_id(){var t=wasm.transactionbody_network_id(this.ptr);return 0===t?void 0:NetworkId.__wrap(t)}static new(t,r,e,a){_assertClass(t,TransactionInputs),_assertClass(r,TransactionOutputs),_assertClass(e,BigNum);var s=wasm.transactionbody_new(t.ptr,r.ptr,e.ptr,!isLikeNone(a),isLikeNone(a)?0:a);return TransactionBody.__wrap(s)}}export class TransactionBuilder{static __wrap(t){const r=Object.create(TransactionBuilder.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionbuilder_free(t)}add_inputs_from(t,r){_assertClass(t,TransactionUnspentOutputs),wasm.transactionbuilder_add_inputs_from(this.ptr,t.ptr,r)}add_key_input(t,r,e){_assertClass(t,Ed25519KeyHash),_assertClass(r,TransactionInput),_assertClass(e,Value),wasm.transactionbuilder_add_key_input(this.ptr,t.ptr,r.ptr,e.ptr)}add_script_input(t,r,e){_assertClass(t,ScriptHash),_assertClass(r,TransactionInput),_assertClass(e,Value),wasm.transactionbuilder_add_script_input(this.ptr,t.ptr,r.ptr,e.ptr)}add_bootstrap_input(t,r,e){_assertClass(t,ByronAddress),_assertClass(r,TransactionInput),_assertClass(e,Value),wasm.transactionbuilder_add_bootstrap_input(this.ptr,t.ptr,r.ptr,e.ptr)}add_input(t,r,e){_assertClass(t,Address),_assertClass(r,TransactionInput),_assertClass(e,Value),wasm.transactionbuilder_add_input(this.ptr,t.ptr,r.ptr,e.ptr)}fee_for_input(t,r,e){_assertClass(t,Address),_assertClass(r,TransactionInput),_assertClass(e,Value);var a=wasm.transactionbuilder_fee_for_input(this.ptr,t.ptr,r.ptr,e.ptr);return BigNum.__wrap(a)}add_output(t){_assertClass(t,TransactionOutput),wasm.transactionbuilder_add_output(this.ptr,t.ptr)}fee_for_output(t){_assertClass(t,TransactionOutput);var r=wasm.transactionbuilder_fee_for_output(this.ptr,t.ptr);return BigNum.__wrap(r)}set_fee(t){_assertClass(t,BigNum),wasm.transactionbuilder_set_fee(this.ptr,t.ptr)}set_ttl(t){wasm.transactionbuilder_set_ttl(this.ptr,t)}set_validity_start_interval(t){wasm.transactionbuilder_set_validity_start_interval(this.ptr,t)}set_certs(t){_assertClass(t,Certificates),wasm.transactionbuilder_set_certs(this.ptr,t.ptr)}set_withdrawals(t){_assertClass(t,Withdrawals),wasm.transactionbuilder_set_withdrawals(this.ptr,t.ptr)}get_auxiliary_data(){var t=wasm.transactionbuilder_get_auxiliary_data(this.ptr);return 0===t?void 0:AuxiliaryData.__wrap(t)}set_auxiliary_data(t){_assertClass(t,AuxiliaryData),wasm.transactionbuilder_set_auxiliary_data(this.ptr,t.ptr)}set_metadata(t){_assertClass(t,GeneralTransactionMetadata),wasm.transactionbuilder_set_metadata(this.ptr,t.ptr)}add_metadatum(t,r){_assertClass(t,BigNum),_assertClass(r,TransactionMetadatum),wasm.transactionbuilder_add_metadatum(this.ptr,t.ptr,r.ptr)}add_json_metadatum(t,r){_assertClass(t,BigNum);var e=passStringToWasm0(r,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),a=WASM_VECTOR_LEN;wasm.transactionbuilder_add_json_metadatum(this.ptr,t.ptr,e,a)}add_json_metadatum_with_schema(t,r,e){_assertClass(t,BigNum);var a=passStringToWasm0(r,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),s=WASM_VECTOR_LEN;wasm.transactionbuilder_add_json_metadatum_with_schema(this.ptr,t.ptr,a,s,e)}set_mint(t,r){_assertClass(t,Mint),_assertClass(r,NativeScripts),wasm.transactionbuilder_set_mint(this.ptr,t.ptr,r.ptr)}get_mint(){var t=wasm.transactionbuilder_get_mint(this.ptr);return 0===t?void 0:Mint.__wrap(t)}get_mint_scripts(){var t=wasm.transactionbuilder_get_mint_scripts(this.ptr);return 0===t?void 0:NativeScripts.__wrap(t)}set_mint_asset(t,r){_assertClass(t,NativeScript),_assertClass(r,MintAssets),wasm.transactionbuilder_set_mint_asset(this.ptr,t.ptr,r.ptr)}add_mint_asset(t,r,e){_assertClass(t,NativeScript),_assertClass(r,AssetName),_assertClass(e,Int);var a=e.ptr;e.ptr=0,wasm.transactionbuilder_add_mint_asset(this.ptr,t.ptr,r.ptr,a)}add_mint_asset_and_output(t,r,e,a,s){_assertClass(t,NativeScript),_assertClass(r,AssetName),_assertClass(e,Int);var _=e.ptr;e.ptr=0,_assertClass(a,TransactionOutputAmountBuilder),_assertClass(s,BigNum),wasm.transactionbuilder_add_mint_asset_and_output(this.ptr,t.ptr,r.ptr,_,a.ptr,s.ptr)}add_mint_asset_and_output_min_required_coin(t,r,e,a){_assertClass(t,NativeScript),_assertClass(r,AssetName),_assertClass(e,Int);var s=e.ptr;e.ptr=0,_assertClass(a,TransactionOutputAmountBuilder),wasm.transactionbuilder_add_mint_asset_and_output_min_required_coin(this.ptr,t.ptr,r.ptr,s,a.ptr)}static new(t){_assertClass(t,TransactionBuilderConfig);var r=wasm.transactionbuilder_new(t.ptr);return TransactionBuilder.__wrap(r)}get_explicit_input(){var t=wasm.transactionbuilder_get_explicit_input(this.ptr);return Value.__wrap(t)}get_implicit_input(){var t=wasm.transactionbuilder_get_implicit_input(this.ptr);return Value.__wrap(t)}get_total_input(){var t=wasm.transactionbuilder_get_total_input(this.ptr);return Value.__wrap(t)}get_explicit_output(){var t=wasm.transactionbuilder_get_explicit_output(this.ptr);return Value.__wrap(t)}get_deposit(){var t=wasm.transactionbuilder_get_deposit(this.ptr);return BigNum.__wrap(t)}get_fee_if_set(){var t=wasm.transactionbuilder_get_fee_if_set(this.ptr);return 0===t?void 0:BigNum.__wrap(t)}add_change_if_needed(t){return _assertClass(t,Address),0!==wasm.transactionbuilder_add_change_if_needed(this.ptr,t.ptr)}full_size(){return wasm.transactionbuilder_full_size(this.ptr)>>>0}output_sizes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionbuilder_output_sizes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU32FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,4*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}build(){var t=wasm.transactionbuilder_build(this.ptr);return TransactionBody.__wrap(t)}build_tx(){var t=wasm.transactionbuilder_build_tx(this.ptr);return Transaction.__wrap(t)}min_fee(){var t=wasm.transactionbuilder_min_fee(this.ptr);return BigNum.__wrap(t)}}export class TransactionBuilderConfig{static __wrap(t){const r=Object.create(TransactionBuilderConfig.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionbuilderconfig_free(t)}}export class TransactionBuilderConfigBuilder{static __wrap(t){const r=Object.create(TransactionBuilderConfigBuilder.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionbuilderconfigbuilder_free(t)}static new(){var t=wasm.transactionbuilderconfigbuilder_new();return TransactionBuilderConfigBuilder.__wrap(t)}fee_algo(t){_assertClass(t,LinearFee);var r=wasm.transactionbuilderconfigbuilder_fee_algo(this.ptr,t.ptr);return TransactionBuilderConfigBuilder.__wrap(r)}coins_per_utxo_word(t){_assertClass(t,BigNum);var r=wasm.transactionbuilderconfigbuilder_coins_per_utxo_word(this.ptr,t.ptr);return TransactionBuilderConfigBuilder.__wrap(r)}pool_deposit(t){_assertClass(t,BigNum);var r=wasm.transactionbuilderconfigbuilder_pool_deposit(this.ptr,t.ptr);return TransactionBuilderConfigBuilder.__wrap(r)}key_deposit(t){_assertClass(t,BigNum);var r=wasm.transactionbuilderconfigbuilder_key_deposit(this.ptr,t.ptr);return TransactionBuilderConfigBuilder.__wrap(r)}max_value_size(t){var r=wasm.transactionbuilderconfigbuilder_max_value_size(this.ptr,t);return TransactionBuilderConfigBuilder.__wrap(r)}max_tx_size(t){var r=wasm.transactionbuilderconfigbuilder_max_tx_size(this.ptr,t);return TransactionBuilderConfigBuilder.__wrap(r)}prefer_pure_change(t){var r=wasm.transactionbuilderconfigbuilder_prefer_pure_change(this.ptr,t);return TransactionBuilderConfigBuilder.__wrap(r)}build(){var t=wasm.transactionbuilderconfigbuilder_build(this.ptr);return TransactionBuilderConfig.__wrap(t)}}export class TransactionHash{static __wrap(t){const r=Object.create(TransactionHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionhash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionhash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.transactionhash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.transactionhash_from_bech32(r,e);return TransactionHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionhash_from_bytes(r,e);return TransactionHash.__wrap(a)}}export class TransactionInput{static __wrap(t){const r=Object.create(TransactionInput.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactioninput_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactioninput_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactioninput_from_bytes(r,e);return TransactionInput.__wrap(a)}transaction_id(){var t=wasm.transactioninput_transaction_id(this.ptr);return TransactionHash.__wrap(t)}index(){return wasm.transactioninput_index(this.ptr)>>>0}static new(t,r){_assertClass(t,TransactionHash);var e=wasm.transactioninput_new(t.ptr,r);return TransactionInput.__wrap(e)}}export class TransactionInputs{static __wrap(t){const r=Object.create(TransactionInputs.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactioninputs_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactioninputs_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactioninputs_from_bytes(r,e);return TransactionInputs.__wrap(a)}static new(){var t=wasm.transactioninputs_new();return TransactionInputs.__wrap(t)}len(){return wasm.transactioninputs_len(this.ptr)>>>0}get(t){var r=wasm.transactioninputs_get(this.ptr,t);return TransactionInput.__wrap(r)}add(t){_assertClass(t,TransactionInput),wasm.transactioninputs_add(this.ptr,t.ptr)}}export class TransactionMetadatum{static __wrap(t){const r=Object.create(TransactionMetadatum.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionmetadatum_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionmetadatum_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionmetadatum_from_bytes(r,e);return TransactionMetadatum.__wrap(a)}static new_map(t){_assertClass(t,MetadataMap);var r=wasm.transactionmetadatum_new_map(t.ptr);return TransactionMetadatum.__wrap(r)}static new_list(t){_assertClass(t,MetadataList);var r=wasm.transactionmetadatum_new_list(t.ptr);return TransactionMetadatum.__wrap(r)}static new_int(t){_assertClass(t,Int);var r=wasm.transactionmetadatum_new_int(t.ptr);return TransactionMetadatum.__wrap(r)}static new_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionmetadatum_new_bytes(r,e);return TransactionMetadatum.__wrap(a)}static new_text(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.transactionmetadatum_new_text(r,e);return TransactionMetadatum.__wrap(a)}kind(){return wasm.transactionmetadatum_kind(this.ptr)>>>0}as_map(){var t=wasm.transactionmetadatum_as_map(this.ptr);return MetadataMap.__wrap(t)}as_list(){var t=wasm.transactionmetadatum_as_list(this.ptr);return MetadataList.__wrap(t)}as_int(){var t=wasm.transactionmetadatum_as_int(this.ptr);return Int.__wrap(t)}as_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionmetadatum_as_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}as_text(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionmetadatum_as_text(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}}export class TransactionMetadatumLabels{static __wrap(t){const r=Object.create(TransactionMetadatumLabels.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionmetadatumlabels_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionmetadatumlabels_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionmetadatumlabels_from_bytes(r,e);return TransactionMetadatumLabels.__wrap(a)}static new(){var t=wasm.transactionmetadatumlabels_new();return TransactionMetadatumLabels.__wrap(t)}len(){return wasm.transactionmetadatumlabels_len(this.ptr)>>>0}get(t){var r=wasm.transactionmetadatumlabels_get(this.ptr,t);return BigNum.__wrap(r)}add(t){_assertClass(t,BigNum),wasm.transactionmetadatumlabels_add(this.ptr,t.ptr)}}export class TransactionOutput{static __wrap(t){const r=Object.create(TransactionOutput.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionoutput_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionoutput_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionoutput_from_bytes(r,e);return TransactionOutput.__wrap(a)}address(){var t=wasm.transactionoutput_address(this.ptr);return Address.__wrap(t)}amount(){var t=wasm.transactionoutput_amount(this.ptr);return Value.__wrap(t)}data_hash(){var t=wasm.transactionoutput_data_hash(this.ptr);return 0===t?void 0:DataHash.__wrap(t)}set_data_hash(t){_assertClass(t,DataHash),wasm.transactionoutput_set_data_hash(this.ptr,t.ptr)}static new(t,r){_assertClass(t,Address),_assertClass(r,Value);var e=wasm.transactionoutput_new(t.ptr,r.ptr);return TransactionOutput.__wrap(e)}}export class TransactionOutputAmountBuilder{static __wrap(t){const r=Object.create(TransactionOutputAmountBuilder.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionoutputamountbuilder_free(t)}with_value(t){_assertClass(t,Value);var r=wasm.transactionoutputamountbuilder_with_value(this.ptr,t.ptr);return TransactionOutputAmountBuilder.__wrap(r)}with_coin(t){_assertClass(t,BigNum);var r=wasm.transactionoutputamountbuilder_with_coin(this.ptr,t.ptr);return TransactionOutputAmountBuilder.__wrap(r)}with_coin_and_asset(t,r){_assertClass(t,BigNum),_assertClass(r,MultiAsset);var e=wasm.transactionoutputamountbuilder_with_coin_and_asset(this.ptr,t.ptr,r.ptr);return TransactionOutputAmountBuilder.__wrap(e)}with_asset_and_min_required_coin(t,r){_assertClass(t,MultiAsset),_assertClass(r,BigNum);var e=wasm.transactionoutputamountbuilder_with_asset_and_min_required_coin(this.ptr,t.ptr,r.ptr);return TransactionOutputAmountBuilder.__wrap(e)}build(){var t=wasm.transactionoutputamountbuilder_build(this.ptr);return TransactionOutput.__wrap(t)}}export class TransactionOutputBuilder{static __wrap(t){const r=Object.create(TransactionOutputBuilder.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionoutputbuilder_free(t)}static new(){var t=wasm.transactionoutputbuilder_new();return TransactionOutputBuilder.__wrap(t)}with_address(t){_assertClass(t,Address);var r=wasm.transactionoutputbuilder_with_address(this.ptr,t.ptr);return TransactionOutputBuilder.__wrap(r)}with_data_hash(t){_assertClass(t,DataHash);var r=wasm.transactionoutputbuilder_with_data_hash(this.ptr,t.ptr);return TransactionOutputBuilder.__wrap(r)}next(){var t=wasm.transactionoutputbuilder_next(this.ptr);return TransactionOutputAmountBuilder.__wrap(t)}}export class TransactionOutputs{static __wrap(t){const r=Object.create(TransactionOutputs.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionoutputs_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionoutputs_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionoutputs_from_bytes(r,e);return TransactionOutputs.__wrap(a)}static new(){var t=wasm.transactionoutputs_new();return TransactionOutputs.__wrap(t)}len(){return wasm.transactionoutputs_len(this.ptr)>>>0}get(t){var r=wasm.transactionoutputs_get(this.ptr,t);return TransactionOutput.__wrap(r)}add(t){_assertClass(t,TransactionOutput),wasm.transactionoutputs_add(this.ptr,t.ptr)}}export class TransactionUnspentOutput{static __wrap(t){const r=Object.create(TransactionUnspentOutput.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionunspentoutput_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionunspentoutput_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionunspentoutput_from_bytes(r,e);return TransactionUnspentOutput.__wrap(a)}static new(t,r){_assertClass(t,TransactionInput),_assertClass(r,TransactionOutput);var e=wasm.transactionunspentoutput_new(t.ptr,r.ptr);return TransactionUnspentOutput.__wrap(e)}input(){var t=wasm.transactionunspentoutput_input(this.ptr);return TransactionInput.__wrap(t)}output(){var t=wasm.transactionunspentoutput_output(this.ptr);return TransactionOutput.__wrap(t)}}export class TransactionUnspentOutputs{static __wrap(t){const r=Object.create(TransactionUnspentOutputs.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionunspentoutputs_free(t)}static new(){var t=wasm.transactionunspentoutputs_new();return TransactionUnspentOutputs.__wrap(t)}len(){return wasm.transactionunspentoutputs_len(this.ptr)>>>0}get(t){var r=wasm.transactionunspentoutputs_get(this.ptr,t);return TransactionUnspentOutput.__wrap(r)}add(t){_assertClass(t,TransactionUnspentOutput),wasm.transactionunspentoutputs_add(this.ptr,t.ptr)}}export class TransactionWitnessSet{static __wrap(t){const r=Object.create(TransactionWitnessSet.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionwitnessset_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionwitnessset_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionwitnessset_from_bytes(r,e);return TransactionWitnessSet.__wrap(a)}set_vkeys(t){_assertClass(t,Vkeywitnesses),wasm.transactionwitnessset_set_vkeys(this.ptr,t.ptr)}vkeys(){var t=wasm.transactionwitnessset_vkeys(this.ptr);return 0===t?void 0:Vkeywitnesses.__wrap(t)}set_native_scripts(t){_assertClass(t,NativeScripts),wasm.transactionwitnessset_set_native_scripts(this.ptr,t.ptr)}native_scripts(){var t=wasm.transactionwitnessset_native_scripts(this.ptr);return 0===t?void 0:NativeScripts.__wrap(t)}set_bootstraps(t){_assertClass(t,BootstrapWitnesses),wasm.transactionwitnessset_set_bootstraps(this.ptr,t.ptr)}bootstraps(){var t=wasm.transactionwitnessset_bootstraps(this.ptr);return 0===t?void 0:BootstrapWitnesses.__wrap(t)}set_plutus_scripts(t){_assertClass(t,PlutusScripts),wasm.transactionwitnessset_set_plutus_scripts(this.ptr,t.ptr)}plutus_scripts(){var t=wasm.transactionwitnessset_plutus_scripts(this.ptr);return 0===t?void 0:PlutusScripts.__wrap(t)}set_plutus_data(t){_assertClass(t,PlutusList),wasm.transactionwitnessset_set_plutus_data(this.ptr,t.ptr)}plutus_data(){var t=wasm.transactionwitnessset_plutus_data(this.ptr);return 0===t?void 0:PlutusList.__wrap(t)}set_redeemers(t){_assertClass(t,Redeemers),wasm.transactionwitnessset_set_redeemers(this.ptr,t.ptr)}redeemers(){var t=wasm.transactionwitnessset_redeemers(this.ptr);return 0===t?void 0:Redeemers.__wrap(t)}static new(){var t=wasm.transactionwitnessset_new();return TransactionWitnessSet.__wrap(t)}}export class TransactionWitnessSets{static __wrap(t){const r=Object.create(TransactionWitnessSets.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_transactionwitnesssets_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.transactionwitnesssets_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.transactionwitnesssets_from_bytes(r,e);return TransactionWitnessSets.__wrap(a)}static new(){var t=wasm.transactionwitnesssets_new();return TransactionWitnessSets.__wrap(t)}len(){return wasm.transactionwitnesssets_len(this.ptr)>>>0}get(t){var r=wasm.transactionwitnesssets_get(this.ptr,t);return TransactionWitnessSet.__wrap(r)}add(t){_assertClass(t,TransactionWitnessSet),wasm.transactionwitnesssets_add(this.ptr,t.ptr)}}export class URL{static __wrap(t){const r=Object.create(URL.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_url_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.url_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.url_from_bytes(r,e);return URL.__wrap(a)}static new(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.url_new(r,e);return URL.__wrap(a)}url(){try{const e=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.url_url(e,this.ptr);var t=getInt32Memory0()[e/4+0],r=getInt32Memory0()[e/4+1];return getStringFromWasm0(t,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,r)}}}export class UnitInterval{static __wrap(t){const r=Object.create(UnitInterval.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_unitinterval_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.unitinterval_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.unitinterval_from_bytes(r,e);return UnitInterval.__wrap(a)}numerator(){var t=wasm.unitinterval_numerator(this.ptr);return BigNum.__wrap(t)}denominator(){var t=wasm.unitinterval_denominator(this.ptr);return BigNum.__wrap(t)}static new(t,r){_assertClass(t,BigNum),_assertClass(r,BigNum);var e=wasm.unitinterval_new(t.ptr,r.ptr);return UnitInterval.__wrap(e)}}export class Update{static __wrap(t){const r=Object.create(Update.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_update_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.update_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.update_from_bytes(r,e);return Update.__wrap(a)}proposed_protocol_parameter_updates(){var t=wasm.update_proposed_protocol_parameter_updates(this.ptr);return ProposedProtocolParameterUpdates.__wrap(t)}epoch(){return wasm.update_epoch(this.ptr)>>>0}static new(t,r){_assertClass(t,ProposedProtocolParameterUpdates);var e=wasm.update_new(t.ptr,r);return Update.__wrap(e)}}export class VRFCert{static __wrap(t){const r=Object.create(VRFCert.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vrfcert_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vrfcert_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.vrfcert_from_bytes(r,e);return VRFCert.__wrap(a)}output(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vrfcert_output(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}proof(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vrfcert_proof(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static new(t,r){var e=passArray8ToWasm0(t,wasm.__wbindgen_malloc),a=WASM_VECTOR_LEN,s=passArray8ToWasm0(r,wasm.__wbindgen_malloc),_=WASM_VECTOR_LEN,n=wasm.vrfcert_new(e,a,s,_);return VRFCert.__wrap(n)}}export class VRFKeyHash{static __wrap(t){const r=Object.create(VRFKeyHash.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vrfkeyhash_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vrfkeyhash_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.vrfkeyhash_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.vrfkeyhash_from_bech32(r,e);return VRFKeyHash.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.vrfkeyhash_from_bytes(r,e);return VRFKeyHash.__wrap(a)}}export class VRFVKey{static __wrap(t){const r=Object.create(VRFVKey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vrfvkey_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vrfvkey_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}to_bech32(t){try{const _=wasm.__wbindgen_add_to_stack_pointer(-16);var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN;wasm.vrfvkey_to_bech32(_,this.ptr,r,e);var a=getInt32Memory0()[_/4+0],s=getInt32Memory0()[_/4+1];return getStringFromWasm0(a,s)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(a,s)}}static from_bech32(t){var r=passStringToWasm0(t,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),e=WASM_VECTOR_LEN,a=wasm.vrfvkey_from_bech32(r,e);return VRFVKey.__wrap(a)}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.vrfvkey_from_bytes(r,e);return VRFVKey.__wrap(a)}}export class Value{static __wrap(t){const r=Object.create(Value.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_value_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.value_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.value_from_bytes(r,e);return Value.__wrap(a)}static new(t){_assertClass(t,BigNum);var r=wasm.value_new(t.ptr);return Value.__wrap(r)}static new_from_assets(t){_assertClass(t,MultiAsset);var r=wasm.value_new_from_assets(t.ptr);return Value.__wrap(r)}static zero(){var t=wasm.value_zero();return Value.__wrap(t)}is_zero(){return 0!==wasm.value_is_zero(this.ptr)}coin(){var t=wasm.value_coin(this.ptr);return BigNum.__wrap(t)}set_coin(t){_assertClass(t,BigNum),wasm.value_set_coin(this.ptr,t.ptr)}multiasset(){var t=wasm.value_multiasset(this.ptr);return 0===t?void 0:MultiAsset.__wrap(t)}set_multiasset(t){_assertClass(t,MultiAsset),wasm.value_set_multiasset(this.ptr,t.ptr)}checked_add(t){_assertClass(t,Value);var r=wasm.value_checked_add(this.ptr,t.ptr);return Value.__wrap(r)}checked_sub(t){_assertClass(t,Value);var r=wasm.value_checked_sub(this.ptr,t.ptr);return Value.__wrap(r)}clamped_sub(t){_assertClass(t,Value);var r=wasm.value_clamped_sub(this.ptr,t.ptr);return Value.__wrap(r)}compare(t){_assertClass(t,Value);var r=wasm.value_compare(this.ptr,t.ptr);return 16777215===r?void 0:r}}export class Vkey{static __wrap(t){const r=Object.create(Vkey.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vkey_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vkey_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.vkey_from_bytes(r,e);return Vkey.__wrap(a)}static new(t){_assertClass(t,PublicKey);var r=wasm.vkey_new(t.ptr);return Vkey.__wrap(r)}public_key(){var t=wasm.vkey_public_key(this.ptr);return PublicKey.__wrap(t)}}export class Vkeys{static __wrap(t){const r=Object.create(Vkeys.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vkeys_free(t)}static new(){var t=wasm.vkeys_new();return Vkeys.__wrap(t)}len(){return wasm.vkeys_len(this.ptr)>>>0}get(t){var r=wasm.vkeys_get(this.ptr,t);return Vkey.__wrap(r)}add(t){_assertClass(t,Vkey),wasm.vkeys_add(this.ptr,t.ptr)}}export class Vkeywitness{static __wrap(t){const r=Object.create(Vkeywitness.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vkeywitness_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.vkeywitness_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.vkeywitness_from_bytes(r,e);return Vkeywitness.__wrap(a)}static new(t,r){_assertClass(t,Vkey),_assertClass(r,Ed25519Signature);var e=wasm.vkeywitness_new(t.ptr,r.ptr);return Vkeywitness.__wrap(e)}vkey(){var t=wasm.vkeywitness_vkey(this.ptr);return Vkey.__wrap(t)}signature(){var t=wasm.vkeywitness_signature(this.ptr);return Ed25519Signature.__wrap(t)}}export class Vkeywitnesses{static __wrap(t){const r=Object.create(Vkeywitnesses.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_vkeywitnesses_free(t)}static new(){var t=wasm.vkeywitnesses_new();return Vkeywitnesses.__wrap(t)}len(){return wasm.vkeywitnesses_len(this.ptr)>>>0}get(t){var r=wasm.vkeywitnesses_get(this.ptr,t);return Vkeywitness.__wrap(r)}add(t){_assertClass(t,Vkeywitness),wasm.vkeywitnesses_add(this.ptr,t.ptr)}}export class Withdrawals{static __wrap(t){const r=Object.create(Withdrawals.prototype);return r.ptr=t,r}__destroy_into_raw(){const t=this.ptr;return this.ptr=0,t}free(){const t=this.__destroy_into_raw();wasm.__wbg_withdrawals_free(t)}to_bytes(){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.withdrawals_to_bytes(a,this.ptr);var t=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1],e=getArrayU8FromWasm0(t,r).slice();return wasm.__wbindgen_free(t,1*r),e}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}static from_bytes(t){var r=passArray8ToWasm0(t,wasm.__wbindgen_malloc),e=WASM_VECTOR_LEN,a=wasm.withdrawals_from_bytes(r,e);return Withdrawals.__wrap(a)}static new(){var t=wasm.withdrawals_new();return Withdrawals.__wrap(t)}len(){return wasm.withdrawals_len(this.ptr)>>>0}insert(t,r){_assertClass(t,RewardAddress),_assertClass(r,BigNum);var e=wasm.withdrawals_insert(this.ptr,t.ptr,r.ptr);return 0===e?void 0:BigNum.__wrap(e)}get(t){_assertClass(t,RewardAddress);var r=wasm.withdrawals_get(this.ptr,t.ptr);return 0===r?void 0:BigNum.__wrap(r)}keys(){var t=wasm.withdrawals_keys(this.ptr);return RewardAddresses.__wrap(t)}}export function __wbindgen_object_drop_ref(t){takeObject(t)}export function __wbindgen_string_new(t,r){return addHeapObject(getStringFromWasm0(t,r))}export function __wbindgen_string_get(t,r){const e=getObject(r);var a="string"==typeof e?e:void 0,s=isLikeNone(a)?0:passStringToWasm0(a,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),_=WASM_VECTOR_LEN;getInt32Memory0()[t/4+1]=_,getInt32Memory0()[t/4+0]=s}export function __wbg_getRandomValues_98117e9a7e993920(){return handleError((function(t,r){getObject(t).getRandomValues(getObject(r))}),arguments)}export function __wbg_randomFillSync_64cc7d048f228ca8(){return handleError((function(t,r,e){getObject(t).randomFillSync(getArrayU8FromWasm0(r,e))}),arguments)}export function __wbg_process_2f24d6544ea7b200(t){return addHeapObject(getObject(t).process)}export function __wbindgen_is_object(t){const r=getObject(t);return"object"==typeof r&&null!==r}export function __wbg_versions_6164651e75405d4a(t){return addHeapObject(getObject(t).versions)}export function __wbg_node_4b517d861cbcb3bc(t){return addHeapObject(getObject(t).node)}export function __wbindgen_is_string(t){return"string"==typeof getObject(t)}export function __wbg_crypto_98fc271021c7d2ad(t){return addHeapObject(getObject(t).crypto)}export function __wbg_msCrypto_a2cdb043d2bfe57f(t){return addHeapObject(getObject(t).msCrypto)}export function __wbg_modulerequire_3440a4bcf44437db(){return handleError((function(t,r){return addHeapObject(module.require(getStringFromWasm0(t,r)))}),arguments)}export function __wbg_newnoargs_9fdd8f3961dd1bee(t,r){return addHeapObject(new Function(getStringFromWasm0(t,r)))}export function __wbg_call_ba36642bd901572b(){return handleError((function(t,r){return addHeapObject(getObject(t).call(getObject(r)))}),arguments)}export function __wbg_self_bb69a836a72ec6e9(){return handleError((function(){return addHeapObject(self.self)}),arguments)}export function __wbg_window_3304fc4b414c9693(){return handleError((function(){return addHeapObject(window.window)}),arguments)}export function __wbg_globalThis_e0d21cabc6630763(){return handleError((function(){return addHeapObject(globalThis.globalThis)}),arguments)}export function __wbg_global_8463719227271676(){return handleError((function(){return addHeapObject(global.global)}),arguments)}export function __wbindgen_is_undefined(t){return void 0===getObject(t)}export function __wbg_buffer_9e184d6f785de5ed(t){return addHeapObject(getObject(t).buffer)}export function __wbg_new_e8101319e4cf95fc(t){return addHeapObject(new Uint8Array(getObject(t)))}export function __wbg_set_e8ae7b27314e8b98(t,r,e){getObject(t).set(getObject(r),e>>>0)}export function __wbg_length_2d56cb37075fcfb1(t){return getObject(t).length}export function __wbg_newwithlength_a8d1dbcbe703a5c6(t){return addHeapObject(new Uint8Array(t>>>0))}export function __wbg_subarray_901ede8318da52a6(t,r,e){return addHeapObject(getObject(t).subarray(r>>>0,e>>>0))}export function __wbindgen_object_clone_ref(t){return addHeapObject(getObject(t))}export function __wbg_new_3a746f2619705add(t,r){return addHeapObject(new Function(getStringFromWasm0(t,r)))}export function __wbg_call_f54d3a6dadb199ca(t,r){return addHeapObject(getObject(t).call(getObject(r)))}export function __wbindgen_jsval_eq(t,r){return getObject(t)===getObject(r)}export function __wbg_self_ac379e780a0d8b94(t){return addHeapObject(getObject(t).self)}export function __wbg_crypto_1e4302b85d4f64a2(t){return addHeapObject(getObject(t).crypto)}export function __wbg_getRandomValues_1b4ba144162a5c9e(t){return addHeapObject(getObject(t).getRandomValues)}export function __wbg_require_6461b1e9a0d7c34a(t,r){return addHeapObject(require(getStringFromWasm0(t,r)))}export function __wbg_randomFillSync_1b52c8482374c55b(t,r,e){getObject(t).randomFillSync(getArrayU8FromWasm0(r,e))}export function __wbg_getRandomValues_1ef11e888e5228e9(t,r,e){getObject(t).getRandomValues(getArrayU8FromWasm0(r,e))}export function __wbindgen_debug_string(t,r){var e=passStringToWasm0(debugString(getObject(r)),wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),a=WASM_VECTOR_LEN;getInt32Memory0()[t/4+1]=a,getInt32Memory0()[t/4+0]=e}export function __wbindgen_throw(t,r){throw new Error(getStringFromWasm0(t,r))}export function __wbindgen_rethrow(t){throw takeObject(t)}export function __wbindgen_memory(){return addHeapObject(wasm.memory)}
//# sourceMappingURL=/sm/d245ff8554970141a4b685f735b2adc3fed2400acf57bdf655ed97fb6e0d1671.map